-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
-- Version: 2022.1
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity krnl_helm_compute_1_Pipeline_VITIS_LOOP_57_24_VITIS_LOOP_58_25_VITIS_LOOP_59_26 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    S_buf_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    S_buf_ce0 : OUT STD_LOGIC;
    S_buf_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    v_buf_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
    v_buf_ce0 : OUT STD_LOGIC;
    v_buf_we0 : OUT STD_LOGIC;
    v_buf_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    t2_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
    t2_ce0 : OUT STD_LOGIC;
    t2_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    ap_ext_blocking_n : OUT STD_LOGIC;
    ap_str_blocking_n : OUT STD_LOGIC;
    ap_int_blocking_n : OUT STD_LOGIC;
    grp_fu_170_p_din0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    grp_fu_170_p_din1 : OUT STD_LOGIC_VECTOR (63 downto 0);
    grp_fu_170_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
    grp_fu_170_p_dout0 : IN STD_LOGIC_VECTOR (63 downto 0);
    grp_fu_170_p_ce : OUT STD_LOGIC;
    grp_fu_174_p_din0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    grp_fu_174_p_din1 : OUT STD_LOGIC_VECTOR (63 downto 0);
    grp_fu_174_p_dout0 : IN STD_LOGIC_VECTOR (63 downto 0);
    grp_fu_174_p_ce : OUT STD_LOGIC );
end;


architecture behav of krnl_helm_compute_1_Pipeline_VITIS_LOOP_57_24_VITIS_LOOP_58_25_VITIS_LOOP_59_26 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000010";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (10 downto 0) := "00000000100";
    constant ap_ST_fsm_pp0_stage3 : STD_LOGIC_VECTOR (10 downto 0) := "00000001000";
    constant ap_ST_fsm_pp0_stage4 : STD_LOGIC_VECTOR (10 downto 0) := "00000010000";
    constant ap_ST_fsm_pp0_stage5 : STD_LOGIC_VECTOR (10 downto 0) := "00000100000";
    constant ap_ST_fsm_pp0_stage6 : STD_LOGIC_VECTOR (10 downto 0) := "00001000000";
    constant ap_ST_fsm_pp0_stage7 : STD_LOGIC_VECTOR (10 downto 0) := "00010000000";
    constant ap_ST_fsm_pp0_stage8 : STD_LOGIC_VECTOR (10 downto 0) := "00100000000";
    constant ap_ST_fsm_pp0_stage9 : STD_LOGIC_VECTOR (10 downto 0) := "01000000000";
    constant ap_ST_fsm_pp0_stage10 : STD_LOGIC_VECTOR (10 downto 0) := "10000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv11_79 : STD_LOGIC_VECTOR (10 downto 0) := "00001111001";
    constant ap_const_lv11_533 : STD_LOGIC_VECTOR (10 downto 0) := "10100110011";
    constant ap_const_lv8_79 : STD_LOGIC_VECTOR (7 downto 0) := "01111001";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv4_B : STD_LOGIC_VECTOR (3 downto 0) := "1011";
    constant ap_const_lv5_B : STD_LOGIC_VECTOR (4 downto 0) := "01011";
    constant ap_const_lv7_B : STD_LOGIC_VECTOR (6 downto 0) := "0001011";
    constant ap_const_lv11_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_const_lv6_16 : STD_LOGIC_VECTOR (5 downto 0) := "010110";
    constant ap_const_lv6_21 : STD_LOGIC_VECTOR (5 downto 0) := "100001";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv6_2C : STD_LOGIC_VECTOR (5 downto 0) := "101100";
    constant ap_const_lv7_37 : STD_LOGIC_VECTOR (6 downto 0) := "0110111";
    constant ap_const_lv11_2 : STD_LOGIC_VECTOR (10 downto 0) := "00000000010";
    constant ap_const_lv7_42 : STD_LOGIC_VECTOR (6 downto 0) := "1000010";
    constant ap_const_lv11_3 : STD_LOGIC_VECTOR (10 downto 0) := "00000000011";
    constant ap_const_lv7_4D : STD_LOGIC_VECTOR (6 downto 0) := "1001101";
    constant ap_const_lv11_4 : STD_LOGIC_VECTOR (10 downto 0) := "00000000100";
    constant ap_const_lv7_58 : STD_LOGIC_VECTOR (6 downto 0) := "1011000";
    constant ap_const_lv11_5 : STD_LOGIC_VECTOR (10 downto 0) := "00000000101";
    constant ap_const_lv6_23 : STD_LOGIC_VECTOR (5 downto 0) := "100011";
    constant ap_const_lv11_6 : STD_LOGIC_VECTOR (10 downto 0) := "00000000110";
    constant ap_const_lv6_2E : STD_LOGIC_VECTOR (5 downto 0) := "101110";
    constant ap_const_lv11_7 : STD_LOGIC_VECTOR (10 downto 0) := "00000000111";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv11_8 : STD_LOGIC_VECTOR (10 downto 0) := "00000001000";
    constant ap_const_lv11_9 : STD_LOGIC_VECTOR (10 downto 0) := "00000001001";
    constant ap_const_lv11_A : STD_LOGIC_VECTOR (10 downto 0) := "00000001010";
    constant ap_const_lv8_B : STD_LOGIC_VECTOR (7 downto 0) := "00001011";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage10 : signal is "none";
    signal ap_block_state11_pp0_stage10_iter0 : BOOLEAN;
    signal ap_block_state22_pp0_stage10_iter1 : BOOLEAN;
    signal ap_block_state33_pp0_stage10_iter2 : BOOLEAN;
    signal ap_block_state44_pp0_stage10_iter3 : BOOLEAN;
    signal ap_block_state55_pp0_stage10_iter4 : BOOLEAN;
    signal ap_block_state66_pp0_stage10_iter5 : BOOLEAN;
    signal ap_block_pp0_stage10_subdone : BOOLEAN;
    signal icmp_ln57_reg_909 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage10 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal reg_334 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_pp0_stage4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage4 : signal is "none";
    signal ap_block_state5_pp0_stage4_iter0 : BOOLEAN;
    signal ap_block_state16_pp0_stage4_iter1 : BOOLEAN;
    signal ap_block_state27_pp0_stage4_iter2 : BOOLEAN;
    signal ap_block_state38_pp0_stage4_iter3 : BOOLEAN;
    signal ap_block_state49_pp0_stage4_iter4 : BOOLEAN;
    signal ap_block_state60_pp0_stage4_iter5 : BOOLEAN;
    signal ap_block_pp0_stage4_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage9 : signal is "none";
    signal ap_block_state10_pp0_stage9_iter0 : BOOLEAN;
    signal ap_block_state21_pp0_stage9_iter1 : BOOLEAN;
    signal ap_block_state32_pp0_stage9_iter2 : BOOLEAN;
    signal ap_block_state43_pp0_stage9_iter3 : BOOLEAN;
    signal ap_block_state54_pp0_stage9_iter4 : BOOLEAN;
    signal ap_block_state65_pp0_stage9_iter5 : BOOLEAN;
    signal ap_block_pp0_stage9_11001 : BOOLEAN;
    signal reg_339 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_pp0_stage3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage3 : signal is "none";
    signal ap_block_state4_pp0_stage3_iter0 : BOOLEAN;
    signal ap_block_state15_pp0_stage3_iter1 : BOOLEAN;
    signal ap_block_state26_pp0_stage3_iter2 : BOOLEAN;
    signal ap_block_state37_pp0_stage3_iter3 : BOOLEAN;
    signal ap_block_state48_pp0_stage3_iter4 : BOOLEAN;
    signal ap_block_state59_pp0_stage3_iter5 : BOOLEAN;
    signal ap_block_pp0_stage3_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage8 : signal is "none";
    signal ap_block_state9_pp0_stage8_iter0 : BOOLEAN;
    signal ap_block_state20_pp0_stage8_iter1 : BOOLEAN;
    signal ap_block_state31_pp0_stage8_iter2 : BOOLEAN;
    signal ap_block_state42_pp0_stage8_iter3 : BOOLEAN;
    signal ap_block_state53_pp0_stage8_iter4 : BOOLEAN;
    signal ap_block_state64_pp0_stage8_iter5 : BOOLEAN;
    signal ap_block_pp0_stage8_11001 : BOOLEAN;
    signal reg_344 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_block_state3_pp0_stage2_iter0 : BOOLEAN;
    signal ap_block_state14_pp0_stage2_iter1 : BOOLEAN;
    signal ap_block_state25_pp0_stage2_iter2 : BOOLEAN;
    signal ap_block_state36_pp0_stage2_iter3 : BOOLEAN;
    signal ap_block_state47_pp0_stage2_iter4 : BOOLEAN;
    signal ap_block_state58_pp0_stage2_iter5 : BOOLEAN;
    signal ap_block_pp0_stage2_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage7 : signal is "none";
    signal ap_block_state8_pp0_stage7_iter0 : BOOLEAN;
    signal ap_block_state19_pp0_stage7_iter1 : BOOLEAN;
    signal ap_block_state30_pp0_stage7_iter2 : BOOLEAN;
    signal ap_block_state41_pp0_stage7_iter3 : BOOLEAN;
    signal ap_block_state52_pp0_stage7_iter4 : BOOLEAN;
    signal ap_block_state63_pp0_stage7_iter5 : BOOLEAN;
    signal ap_block_pp0_stage7_11001 : BOOLEAN;
    signal reg_349 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_block_state2_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_state13_pp0_stage1_iter1 : BOOLEAN;
    signal ap_block_state24_pp0_stage1_iter2 : BOOLEAN;
    signal ap_block_state35_pp0_stage1_iter3 : BOOLEAN;
    signal ap_block_state46_pp0_stage1_iter4 : BOOLEAN;
    signal ap_block_state57_pp0_stage1_iter5 : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage6 : signal is "none";
    signal ap_block_state7_pp0_stage6_iter0 : BOOLEAN;
    signal ap_block_state18_pp0_stage6_iter1 : BOOLEAN;
    signal ap_block_state29_pp0_stage6_iter2 : BOOLEAN;
    signal ap_block_state40_pp0_stage6_iter3 : BOOLEAN;
    signal ap_block_state51_pp0_stage6_iter4 : BOOLEAN;
    signal ap_block_state62_pp0_stage6_iter5 : BOOLEAN;
    signal ap_block_pp0_stage6_11001 : BOOLEAN;
    signal reg_354 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state12_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state23_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state34_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state45_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state56_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state67_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage5 : signal is "none";
    signal ap_block_state6_pp0_stage5_iter0 : BOOLEAN;
    signal ap_block_state17_pp0_stage5_iter1 : BOOLEAN;
    signal ap_block_state28_pp0_stage5_iter2 : BOOLEAN;
    signal ap_block_state39_pp0_stage5_iter3 : BOOLEAN;
    signal ap_block_state50_pp0_stage5_iter4 : BOOLEAN;
    signal ap_block_state61_pp0_stage5_iter5 : BOOLEAN;
    signal ap_block_pp0_stage5_11001 : BOOLEAN;
    signal ap_block_pp0_stage10_11001 : BOOLEAN;
    signal c2_2_reg_893 : STD_LOGIC_VECTOR (3 downto 0);
    signal indvar_flatten310_load_reg_899 : STD_LOGIC_VECTOR (10 downto 0);
    signal empty_59_fu_395_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal empty_59_reg_904 : STD_LOGIC_VECTOR (10 downto 0);
    signal icmp_ln57_fu_401_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln57_reg_909_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln57_reg_909_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln57_reg_909_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln57_reg_909_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_flatten276_load_reg_913 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln58_fu_416_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln58_reg_918 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln57_1_fu_428_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln57_1_reg_926 : STD_LOGIC_VECTOR (3 downto 0);
    signal and_ln57_fu_453_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln57_reg_939 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln58_fu_465_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln58_reg_946 : STD_LOGIC_VECTOR (3 downto 0);
    signal S_buf_load_reg_961 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln58_fu_522_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln58_reg_971 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln58_2_fu_538_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal select_ln58_2_reg_976 : STD_LOGIC_VECTOR (10 downto 0);
    signal empty_fu_560_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal empty_reg_981 : STD_LOGIC_VECTOR (6 downto 0);
    signal S_buf_load_11_reg_986 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln57_4_fu_571_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln57_4_reg_991 : STD_LOGIC_VECTOR (5 downto 0);
    signal S_buf_load_12_reg_1004 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_842_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln64_reg_1019 : STD_LOGIC_VECTOR (10 downto 0);
    signal S_buf_load_13_reg_1038 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_850_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln61_reg_1048 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln61_reg_1048_pp0_iter1_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln61_reg_1048_pp0_iter2_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln61_reg_1048_pp0_iter3_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln61_reg_1048_pp0_iter4_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln61_reg_1048_pp0_iter5_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal t2_load_reg_1053 : STD_LOGIC_VECTOR (63 downto 0);
    signal S_buf_load_14_reg_1063 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln57_8_fu_659_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln57_8_reg_1068 : STD_LOGIC_VECTOR (6 downto 0);
    signal t2_load_1_reg_1080 : STD_LOGIC_VECTOR (63 downto 0);
    signal S_buf_load_15_reg_1090 : STD_LOGIC_VECTOR (63 downto 0);
    signal t2_load_2_reg_1100 : STD_LOGIC_VECTOR (63 downto 0);
    signal S_buf_load_16_reg_1110 : STD_LOGIC_VECTOR (63 downto 0);
    signal t2_load_3_reg_1120 : STD_LOGIC_VECTOR (63 downto 0);
    signal S_buf_load_17_reg_1130 : STD_LOGIC_VECTOR (63 downto 0);
    signal t2_load_4_reg_1140 : STD_LOGIC_VECTOR (63 downto 0);
    signal S_buf_load_18_reg_1150 : STD_LOGIC_VECTOR (63 downto 0);
    signal t2_load_5_reg_1160 : STD_LOGIC_VECTOR (63 downto 0);
    signal S_buf_load_19_reg_1170 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul382_i_reg_1180 : STD_LOGIC_VECTOR (63 downto 0);
    signal t2_load_6_reg_1185 : STD_LOGIC_VECTOR (63 downto 0);
    signal S_buf_load_20_reg_1195 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul382_i_1_reg_1200 : STD_LOGIC_VECTOR (63 downto 0);
    signal t2_load_7_reg_1205 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul382_i_2_reg_1215 : STD_LOGIC_VECTOR (63 downto 0);
    signal t2_load_8_reg_1220 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul382_i_3_reg_1230 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul382_i_3_reg_1230_pp0_iter2_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal t2_load_9_reg_1235 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul382_i_4_reg_1245 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul382_i_4_reg_1245_pp0_iter2_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal t2_load_10_reg_1250 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul382_i_5_reg_1255 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul382_i_5_reg_1255_pp0_iter2_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal mul382_i_6_reg_1260 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul382_i_6_reg_1260_pp0_iter2_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal mul382_i_6_reg_1260_pp0_iter3_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal mul382_i_7_reg_1265 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul382_i_7_reg_1265_pp0_iter2_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal mul382_i_7_reg_1265_pp0_iter3_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal mul382_i_8_reg_1270 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul382_i_8_reg_1270_pp0_iter2_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal mul382_i_8_reg_1270_pp0_iter3_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal mul382_i_9_reg_1275 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul382_i_9_reg_1275_pp0_iter2_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal mul382_i_9_reg_1275_pp0_iter3_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal mul382_i_9_reg_1275_pp0_iter4_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal mul382_i_s_reg_1280 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul382_i_s_reg_1280_pp0_iter2_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal mul382_i_s_reg_1280_pp0_iter3_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal mul382_i_s_reg_1280_pp0_iter4_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_enable_reg_pp0_iter0_reg : STD_LOGIC := '0';
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal zext_ln57_1_fu_436_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal zext_ln57_3_fu_511_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal zext_ln57_5_fu_580_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage2 : BOOLEAN;
    signal zext_ln57_6_fu_595_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage3 : BOOLEAN;
    signal zext_ln64_1_fu_635_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln57_7_fu_644_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage4 : BOOLEAN;
    signal zext_ln64_2_fu_654_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln57_9_fu_668_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage5 : BOOLEAN;
    signal zext_ln64_3_fu_678_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln57_10_fu_688_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage6 : BOOLEAN;
    signal zext_ln64_4_fu_698_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln57_11_fu_708_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage7 : BOOLEAN;
    signal zext_ln64_5_fu_718_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln57_12_fu_728_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage8 : BOOLEAN;
    signal zext_ln64_6_fu_738_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln57_13_fu_752_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage9 : BOOLEAN;
    signal zext_ln64_7_fu_762_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln57_14_fu_776_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage10 : BOOLEAN;
    signal zext_ln64_8_fu_786_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln64_9_fu_813_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln64_10_fu_823_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln64_11_fu_833_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln61_fu_838_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal c3_fu_106 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln59_fu_477_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal ap_sig_allocacmp_c3_load : STD_LOGIC_VECTOR (3 downto 0);
    signal c2_fu_110 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln58_3_fu_545_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_sig_allocacmp_c2_2 : STD_LOGIC_VECTOR (3 downto 0);
    signal indvar_flatten276_fu_114 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln58_4_fu_796_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_sig_allocacmp_indvar_flatten276_load : STD_LOGIC_VECTOR (7 downto 0);
    signal c1_fu_118 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_sig_allocacmp_c1_load : STD_LOGIC_VECTOR (3 downto 0);
    signal indvar_flatten310_fu_122 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln57_fu_566_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_sig_allocacmp_indvar_flatten310_load : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_325_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_325_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_330_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_330_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal empty_59_fu_395_p0 : STD_LOGIC_VECTOR (3 downto 0);
    signal empty_59_fu_395_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln57_11_fu_422_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln59_fu_447_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln57_fu_441_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln58_fu_459_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln57_2_fu_502_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln57_1_fu_505_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln57_fu_493_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_mid1274_fu_532_p0 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_mid1274_fu_532_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_mid1274_fu_532_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal select_ln57_3_fu_516_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal empty_fu_560_p0 : STD_LOGIC_VECTOR (3 downto 0);
    signal empty_fu_560_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln57_2_fu_574_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln57_3_fu_590_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_mid1272_fu_609_p0 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_mid1272_fu_609_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal p_mid1272_fu_609_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln57_2_fu_600_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln58_1_fu_615_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal c3_6_cast23_fu_622_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln61_1_fu_625_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln57_4_fu_639_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln64_1_fu_649_p2 : STD_LOGIC_VECTOR (10 downto 0);
    attribute use_dsp48 : string;
    attribute use_dsp48 of add_ln64_1_fu_649_p2 : signal is "no";
    signal add_ln57_5_fu_662_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln64_2_fu_673_p2 : STD_LOGIC_VECTOR (10 downto 0);
    attribute use_dsp48 of add_ln64_2_fu_673_p2 : signal is "no";
    signal add_ln57_6_fu_683_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln64_3_fu_693_p2 : STD_LOGIC_VECTOR (10 downto 0);
    attribute use_dsp48 of add_ln64_3_fu_693_p2 : signal is "no";
    signal add_ln57_7_fu_703_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln64_4_fu_713_p2 : STD_LOGIC_VECTOR (10 downto 0);
    attribute use_dsp48 of add_ln64_4_fu_713_p2 : signal is "no";
    signal add_ln57_8_fu_723_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln64_5_fu_733_p2 : STD_LOGIC_VECTOR (10 downto 0);
    attribute use_dsp48 of add_ln64_5_fu_733_p2 : signal is "no";
    signal add_ln57_9_fu_743_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal sext_ln57_fu_748_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln64_6_fu_757_p2 : STD_LOGIC_VECTOR (10 downto 0);
    attribute use_dsp48 of add_ln64_6_fu_757_p2 : signal is "no";
    signal add_ln57_10_fu_767_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal sext_ln57_1_fu_772_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln64_7_fu_781_p2 : STD_LOGIC_VECTOR (10 downto 0);
    attribute use_dsp48 of add_ln64_7_fu_781_p2 : signal is "no";
    signal add_ln58_1_fu_791_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln64_8_fu_808_p2 : STD_LOGIC_VECTOR (10 downto 0);
    attribute use_dsp48 of add_ln64_8_fu_808_p2 : signal is "no";
    signal add_ln64_9_fu_818_p2 : STD_LOGIC_VECTOR (10 downto 0);
    attribute use_dsp48 of add_ln64_9_fu_818_p2 : signal is "no";
    signal add_ln64_10_fu_828_p2 : STD_LOGIC_VECTOR (10 downto 0);
    attribute use_dsp48 of add_ln64_10_fu_828_p2 : signal is "no";
    signal grp_fu_842_p0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_fu_842_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_fu_850_p0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_fu_850_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_fu_850_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter1_reg : STD_LOGIC;
    signal ap_condition_exit_pp0_iter5_stage0 : STD_LOGIC;
    signal ap_idle_pp0_0to4 : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter2_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter3_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter4_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter5_reg : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_idle_pp0_1to6 : STD_LOGIC;
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_block_pp0_stage2_subdone : BOOLEAN;
    signal ap_block_pp0_stage3_subdone : BOOLEAN;
    signal ap_block_pp0_stage4_subdone : BOOLEAN;
    signal ap_block_pp0_stage5_subdone : BOOLEAN;
    signal ap_block_pp0_stage6_subdone : BOOLEAN;
    signal ap_block_pp0_stage7_subdone : BOOLEAN;
    signal ap_block_pp0_stage8_subdone : BOOLEAN;
    signal ap_block_pp0_stage9_subdone : BOOLEAN;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_block_pp0_stage0_00001 : BOOLEAN;
    signal ap_block_pp0_stage5_00001 : BOOLEAN;
    signal ap_block_pp0_stage10_00001 : BOOLEAN;
    signal ap_block_pp0_stage4_00001 : BOOLEAN;
    signal ap_block_pp0_stage9_00001 : BOOLEAN;
    signal ap_block_pp0_stage3_00001 : BOOLEAN;
    signal ap_block_pp0_stage8_00001 : BOOLEAN;
    signal ap_block_pp0_stage2_00001 : BOOLEAN;
    signal ap_block_pp0_stage7_00001 : BOOLEAN;
    signal ap_block_pp0_stage1_00001 : BOOLEAN;
    signal ap_block_pp0_stage6_00001 : BOOLEAN;
    signal empty_59_fu_395_p00 : STD_LOGIC_VECTOR (10 downto 0);
    signal empty_fu_560_p00 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_fu_842_p00 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_850_p00 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_850_p20 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_mid1272_fu_609_p00 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_mid1274_fu_532_p00 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_ce_reg : STD_LOGIC;

    component krnl_helm_dadd_64ns_64ns_64_5_full_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        din1 : IN STD_LOGIC_VECTOR (63 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component krnl_helm_dmul_64ns_64ns_64_6_max_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        din1 : IN STD_LOGIC_VECTOR (63 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component krnl_helm_mul_4ns_8ns_11_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (3 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        dout : OUT STD_LOGIC_VECTOR (10 downto 0) );
    end component;


    component krnl_helm_mul_4ns_5ns_7_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (3 downto 0);
        din1 : IN STD_LOGIC_VECTOR (4 downto 0);
        dout : OUT STD_LOGIC_VECTOR (6 downto 0) );
    end component;


    component krnl_helm_mac_muladd_4ns_4ns_11ns_11_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (3 downto 0);
        din1 : IN STD_LOGIC_VECTOR (3 downto 0);
        din2 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (10 downto 0) );
    end component;


    component krnl_helm_mac_muladd_4ns_7ns_7ns_11_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (3 downto 0);
        din1 : IN STD_LOGIC_VECTOR (6 downto 0);
        din2 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (10 downto 0) );
    end component;


    component krnl_helm_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    mul_4ns_8ns_11_1_1_U120 : component krnl_helm_mul_4ns_8ns_11_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 4,
        din1_WIDTH => 8,
        dout_WIDTH => 11)
    port map (
        din0 => empty_59_fu_395_p0,
        din1 => empty_59_fu_395_p1,
        dout => empty_59_fu_395_p2);

    mul_4ns_8ns_11_1_1_U121 : component krnl_helm_mul_4ns_8ns_11_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 4,
        din1_WIDTH => 8,
        dout_WIDTH => 11)
    port map (
        din0 => p_mid1274_fu_532_p0,
        din1 => p_mid1274_fu_532_p1,
        dout => p_mid1274_fu_532_p2);

    mul_4ns_5ns_7_1_1_U122 : component krnl_helm_mul_4ns_5ns_7_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 4,
        din1_WIDTH => 5,
        dout_WIDTH => 7)
    port map (
        din0 => empty_fu_560_p0,
        din1 => empty_fu_560_p1,
        dout => empty_fu_560_p2);

    mul_4ns_5ns_7_1_1_U123 : component krnl_helm_mul_4ns_5ns_7_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 4,
        din1_WIDTH => 5,
        dout_WIDTH => 7)
    port map (
        din0 => p_mid1272_fu_609_p0,
        din1 => p_mid1272_fu_609_p1,
        dout => p_mid1272_fu_609_p2);

    mac_muladd_4ns_4ns_11ns_11_4_1_U124 : component krnl_helm_mac_muladd_4ns_4ns_11ns_11_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 4,
        din1_WIDTH => 4,
        din2_WIDTH => 11,
        dout_WIDTH => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_842_p0,
        din1 => grp_fu_842_p1,
        din2 => select_ln58_2_reg_976,
        ce => ap_const_logic_1,
        dout => grp_fu_842_p3);

    mac_muladd_4ns_7ns_7ns_11_4_1_U125 : component krnl_helm_mac_muladd_4ns_7ns_7ns_11_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 4,
        din1_WIDTH => 7,
        din2_WIDTH => 7,
        dout_WIDTH => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_850_p0,
        din1 => grp_fu_850_p1,
        din2 => grp_fu_850_p2,
        ce => ap_const_logic_1,
        dout => grp_fu_850_p3);

    flow_control_loop_pipe_sequential_init_U : component krnl_helm_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage10,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_exit_ready_pp0_iter5_reg = ap_const_logic_1))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
                    ap_enable_reg_pp0_iter0_reg <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage10)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage10_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage10_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10))) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage10_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10))) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage10_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10))) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage10_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10))) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage10_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10))) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_loop_exit_ready_pp0_iter1_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_condition_exit_pp0_iter5_stage0) and (ap_idle_pp0_0to4 = ap_const_logic_1))) then 
                ap_loop_exit_ready_pp0_iter1_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage10_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10))) then 
                ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter2_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_condition_exit_pp0_iter5_stage0) and (ap_idle_pp0_0to4 = ap_const_logic_1))) then 
                ap_loop_exit_ready_pp0_iter2_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage10_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10))) then 
                ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter3_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_condition_exit_pp0_iter5_stage0) and (ap_idle_pp0_0to4 = ap_const_logic_1))) then 
                ap_loop_exit_ready_pp0_iter3_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage10_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10))) then 
                ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter4_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_condition_exit_pp0_iter5_stage0) and (ap_idle_pp0_0to4 = ap_const_logic_1))) then 
                ap_loop_exit_ready_pp0_iter4_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage10_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10))) then 
                ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter5_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_condition_exit_pp0_iter5_stage0) and (ap_idle_pp0_0to4 = ap_const_logic_1))) then 
                ap_loop_exit_ready_pp0_iter5_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage10_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10))) then 
                ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
            end if; 
        end if;
    end process;

    c1_fu_118_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln57_fu_401_p2 = ap_const_lv1_0))) then 
                    c1_fu_118 <= select_ln57_1_fu_428_p3;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    c1_fu_118 <= ap_const_lv4_0;
                end if;
            end if; 
        end if;
    end process;

    c2_fu_110_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                c2_fu_110 <= ap_const_lv4_0;
            elsif (((icmp_ln57_reg_909 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                c2_fu_110 <= select_ln58_3_fu_545_p3;
            end if; 
        end if;
    end process;

    c3_fu_106_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln57_fu_401_p2 = ap_const_lv1_0))) then 
                    c3_fu_106 <= add_ln59_fu_477_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    c3_fu_106 <= ap_const_lv4_0;
                end if;
            end if; 
        end if;
    end process;

    indvar_flatten276_fu_114_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                indvar_flatten276_fu_114 <= ap_const_lv8_0;
            elsif (((icmp_ln57_reg_909 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage10_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10))) then 
                indvar_flatten276_fu_114 <= select_ln58_4_fu_796_p3;
            end if; 
        end if;
    end process;

    indvar_flatten310_fu_122_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                indvar_flatten310_fu_122 <= ap_const_lv11_0;
            elsif (((icmp_ln57_reg_909 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                indvar_flatten310_fu_122 <= add_ln57_fu_566_p2;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln57_reg_909 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                S_buf_load_11_reg_986 <= S_buf_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln57_reg_909 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                S_buf_load_12_reg_1004 <= S_buf_q0;
                add_ln64_reg_1019 <= grp_fu_842_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln57_reg_909 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then
                S_buf_load_13_reg_1038 <= S_buf_q0;
                add_ln61_reg_1048 <= grp_fu_850_p3;
                t2_load_reg_1053 <= t2_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln57_reg_909 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then
                S_buf_load_14_reg_1063 <= S_buf_q0;
                t2_load_1_reg_1080 <= t2_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln57_reg_909 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then
                S_buf_load_15_reg_1090 <= S_buf_q0;
                t2_load_2_reg_1100 <= t2_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln57_reg_909 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then
                S_buf_load_16_reg_1110 <= S_buf_q0;
                t2_load_3_reg_1120 <= t2_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln57_reg_909 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8))) then
                S_buf_load_17_reg_1130 <= S_buf_q0;
                t2_load_4_reg_1140 <= t2_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln57_reg_909 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage9_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9))) then
                S_buf_load_18_reg_1150 <= S_buf_q0;
                t2_load_5_reg_1160 <= t2_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln57_reg_909 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage10_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10))) then
                S_buf_load_19_reg_1170 <= S_buf_q0;
                mul382_i_reg_1180 <= grp_fu_174_p_dout0;
                t2_load_6_reg_1185 <= t2_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                S_buf_load_20_reg_1195 <= S_buf_q0;
                mul382_i_1_reg_1200 <= grp_fu_174_p_dout0;
                t2_load_7_reg_1205 <= t2_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln57_reg_909 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                S_buf_load_reg_961 <= S_buf_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln57_reg_909 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                add_ln58_reg_971 <= add_ln58_fu_522_p2;
                select_ln58_2_reg_976 <= select_ln58_2_fu_538_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then
                add_ln61_reg_1048_pp0_iter1_reg <= add_ln61_reg_1048;
                add_ln61_reg_1048_pp0_iter2_reg <= add_ln61_reg_1048_pp0_iter1_reg;
                add_ln61_reg_1048_pp0_iter3_reg <= add_ln61_reg_1048_pp0_iter2_reg;
                add_ln61_reg_1048_pp0_iter4_reg <= add_ln61_reg_1048_pp0_iter3_reg;
                add_ln61_reg_1048_pp0_iter5_reg <= add_ln61_reg_1048_pp0_iter4_reg;
                mul382_i_5_reg_1255_pp0_iter2_reg <= mul382_i_5_reg_1255;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln57_fu_401_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                and_ln57_reg_939 <= and_ln57_fu_453_p2;
                icmp_ln58_reg_918 <= icmp_ln58_fu_416_p2;
                indvar_flatten276_load_reg_913 <= ap_sig_allocacmp_indvar_flatten276_load;
                select_ln57_1_reg_926 <= select_ln57_1_fu_428_p3;
                select_ln58_reg_946 <= select_ln58_fu_465_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                c2_2_reg_893 <= ap_sig_allocacmp_c2_2;
                empty_59_reg_904 <= empty_59_fu_395_p2;
                icmp_ln57_reg_909 <= icmp_ln57_fu_401_p2;
                icmp_ln57_reg_909_pp0_iter1_reg <= icmp_ln57_reg_909;
                icmp_ln57_reg_909_pp0_iter2_reg <= icmp_ln57_reg_909_pp0_iter1_reg;
                icmp_ln57_reg_909_pp0_iter3_reg <= icmp_ln57_reg_909_pp0_iter2_reg;
                icmp_ln57_reg_909_pp0_iter4_reg <= icmp_ln57_reg_909_pp0_iter3_reg;
                indvar_flatten310_load_reg_899 <= ap_sig_allocacmp_indvar_flatten310_load;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (icmp_ln58_reg_918 = ap_const_lv1_0) and (ap_const_lv1_0 = and_ln57_reg_939) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                empty_reg_981 <= empty_fu_560_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                mul382_i_2_reg_1215 <= grp_fu_174_p_dout0;
                t2_load_8_reg_1220 <= t2_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                mul382_i_3_reg_1230 <= grp_fu_174_p_dout0;
                t2_load_9_reg_1235 <= t2_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                mul382_i_3_reg_1230_pp0_iter2_reg <= mul382_i_3_reg_1230;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                mul382_i_4_reg_1245 <= grp_fu_174_p_dout0;
                t2_load_10_reg_1250 <= t2_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                mul382_i_4_reg_1245_pp0_iter2_reg <= mul382_i_4_reg_1245;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then
                mul382_i_5_reg_1255 <= grp_fu_174_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then
                mul382_i_6_reg_1260 <= grp_fu_174_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then
                mul382_i_6_reg_1260_pp0_iter2_reg <= mul382_i_6_reg_1260;
                mul382_i_6_reg_1260_pp0_iter3_reg <= mul382_i_6_reg_1260_pp0_iter2_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then
                mul382_i_7_reg_1265 <= grp_fu_174_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then
                mul382_i_7_reg_1265_pp0_iter2_reg <= mul382_i_7_reg_1265;
                mul382_i_7_reg_1265_pp0_iter3_reg <= mul382_i_7_reg_1265_pp0_iter2_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then
                mul382_i_8_reg_1270 <= grp_fu_174_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then
                mul382_i_8_reg_1270_pp0_iter2_reg <= mul382_i_8_reg_1270;
                mul382_i_8_reg_1270_pp0_iter3_reg <= mul382_i_8_reg_1270_pp0_iter2_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8))) then
                mul382_i_9_reg_1275 <= grp_fu_174_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8))) then
                mul382_i_9_reg_1275_pp0_iter2_reg <= mul382_i_9_reg_1275;
                mul382_i_9_reg_1275_pp0_iter3_reg <= mul382_i_9_reg_1275_pp0_iter2_reg;
                mul382_i_9_reg_1275_pp0_iter4_reg <= mul382_i_9_reg_1275_pp0_iter3_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage9_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9))) then
                mul382_i_s_reg_1280 <= grp_fu_174_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage9_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9))) then
                mul382_i_s_reg_1280_pp0_iter2_reg <= mul382_i_s_reg_1280;
                mul382_i_s_reg_1280_pp0_iter3_reg <= mul382_i_s_reg_1280_pp0_iter2_reg;
                mul382_i_s_reg_1280_pp0_iter4_reg <= mul382_i_s_reg_1280_pp0_iter3_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp0_stage9_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)))) then
                reg_334 <= grp_fu_170_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)))) then
                reg_339 <= grp_fu_170_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)))) then
                reg_344 <= grp_fu_170_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then
                reg_349 <= grp_fu_170_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp0_stage10_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then
                reg_354 <= grp_fu_170_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln57_reg_909 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                    zext_ln57_4_reg_991(3 downto 0) <= zext_ln57_4_fu_571_p1(3 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln57_reg_909 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then
                    zext_ln57_8_reg_1068(3 downto 0) <= zext_ln57_8_fu_659_p1(3 downto 0);
            end if;
        end if;
    end process;
    zext_ln57_4_reg_991(5 downto 4) <= "00";
    zext_ln57_8_reg_1068(6 downto 4) <= "000";

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage10_subdone, ap_block_pp0_stage0_subdone, ap_condition_exit_pp0_iter5_stage0, ap_idle_pp0_0to4, ap_idle_pp0_1to6, ap_block_pp0_stage1_subdone, ap_block_pp0_stage2_subdone, ap_block_pp0_stage3_subdone, ap_block_pp0_stage4_subdone, ap_block_pp0_stage5_subdone, ap_block_pp0_stage6_subdone, ap_block_pp0_stage7_subdone, ap_block_pp0_stage8_subdone, ap_block_pp0_stage9_subdone, ap_start_int)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                if (((ap_const_logic_1 = ap_condition_exit_pp0_iter5_stage0) and (ap_idle_pp0_0to4 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((not(((ap_start_int = ap_const_logic_0) and (ap_idle_pp0_1to6 = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                end if;
            when ap_ST_fsm_pp0_stage3 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage3_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                end if;
            when ap_ST_fsm_pp0_stage4 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage4_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                end if;
            when ap_ST_fsm_pp0_stage5 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage5_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                end if;
            when ap_ST_fsm_pp0_stage6 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage6_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage7;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
                end if;
            when ap_ST_fsm_pp0_stage7 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage7_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage8;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage7;
                end if;
            when ap_ST_fsm_pp0_stage8 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage8_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage9;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage8;
                end if;
            when ap_ST_fsm_pp0_stage9 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage9_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage10;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage9;
                end if;
            when ap_ST_fsm_pp0_stage10 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage10_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage10;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXX";
        end case;
    end process;

    S_buf_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage10, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage5, zext_ln57_1_fu_436_p1, ap_block_pp0_stage0, zext_ln57_3_fu_511_p1, ap_block_pp0_stage1, zext_ln57_5_fu_580_p1, ap_block_pp0_stage2, zext_ln57_6_fu_595_p1, ap_block_pp0_stage3, zext_ln57_7_fu_644_p1, ap_block_pp0_stage4, zext_ln57_9_fu_668_p1, ap_block_pp0_stage5, zext_ln57_10_fu_688_p1, ap_block_pp0_stage6, zext_ln57_11_fu_708_p1, ap_block_pp0_stage7, zext_ln57_12_fu_728_p1, ap_block_pp0_stage8, zext_ln57_13_fu_752_p1, ap_block_pp0_stage9, zext_ln57_14_fu_776_p1, ap_block_pp0_stage10)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage10) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10))) then 
                S_buf_address0 <= zext_ln57_14_fu_776_p1(7 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage9) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9))) then 
                S_buf_address0 <= zext_ln57_13_fu_752_p1(7 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage8) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8))) then 
                S_buf_address0 <= zext_ln57_12_fu_728_p1(7 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                S_buf_address0 <= zext_ln57_11_fu_708_p1(7 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
                S_buf_address0 <= zext_ln57_10_fu_688_p1(7 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
                S_buf_address0 <= zext_ln57_9_fu_668_p1(7 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                S_buf_address0 <= zext_ln57_7_fu_644_p1(7 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                S_buf_address0 <= zext_ln57_6_fu_595_p1(7 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                S_buf_address0 <= zext_ln57_5_fu_580_p1(7 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                S_buf_address0 <= zext_ln57_3_fu_511_p1(7 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                S_buf_address0 <= zext_ln57_1_fu_436_p1(7 - 1 downto 0);
            else 
                S_buf_address0 <= "XXXXXXX";
            end if;
        else 
            S_buf_address0 <= "XXXXXXX";
        end if; 
    end process;


    S_buf_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage10, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage9, ap_block_pp0_stage9_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage8_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001, ap_block_pp0_stage10_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage10_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage9_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)))) then 
            S_buf_ce0 <= ap_const_logic_1;
        else 
            S_buf_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    add_ln57_10_fu_767_p2 <= std_logic_vector(unsigned(zext_ln57_4_reg_991) + unsigned(ap_const_lv6_2E));
    add_ln57_11_fu_422_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_c1_load) + unsigned(ap_const_lv4_1));
    add_ln57_1_fu_505_p2 <= std_logic_vector(unsigned(zext_ln57_2_fu_502_p1) + unsigned(ap_const_lv5_B));
    add_ln57_2_fu_574_p2 <= std_logic_vector(unsigned(zext_ln57_4_fu_571_p1) + unsigned(ap_const_lv6_16));
    add_ln57_3_fu_590_p2 <= std_logic_vector(unsigned(zext_ln57_4_reg_991) + unsigned(ap_const_lv6_21));
    add_ln57_4_fu_639_p2 <= std_logic_vector(unsigned(zext_ln57_4_reg_991) + unsigned(ap_const_lv6_2C));
    add_ln57_5_fu_662_p2 <= std_logic_vector(unsigned(zext_ln57_8_fu_659_p1) + unsigned(ap_const_lv7_37));
    add_ln57_6_fu_683_p2 <= std_logic_vector(unsigned(zext_ln57_8_reg_1068) + unsigned(ap_const_lv7_42));
    add_ln57_7_fu_703_p2 <= std_logic_vector(unsigned(zext_ln57_8_reg_1068) + unsigned(ap_const_lv7_4D));
    add_ln57_8_fu_723_p2 <= std_logic_vector(unsigned(zext_ln57_8_reg_1068) + unsigned(ap_const_lv7_58));
    add_ln57_9_fu_743_p2 <= std_logic_vector(unsigned(zext_ln57_4_reg_991) + unsigned(ap_const_lv6_23));
    add_ln57_fu_566_p2 <= std_logic_vector(unsigned(indvar_flatten310_load_reg_899) + unsigned(ap_const_lv11_1));
    add_ln58_1_fu_791_p2 <= std_logic_vector(unsigned(indvar_flatten276_load_reg_913) + unsigned(ap_const_lv8_1));
    add_ln58_fu_522_p2 <= std_logic_vector(unsigned(select_ln57_fu_493_p3) + unsigned(ap_const_lv4_1));
    add_ln59_fu_477_p2 <= std_logic_vector(unsigned(select_ln58_fu_465_p3) + unsigned(ap_const_lv4_1));
    add_ln61_1_fu_625_p2 <= std_logic_vector(unsigned(select_ln58_1_fu_615_p3) + unsigned(c3_6_cast23_fu_622_p1));
    add_ln64_10_fu_828_p2 <= std_logic_vector(unsigned(add_ln64_reg_1019) + unsigned(ap_const_lv11_A));
    add_ln64_1_fu_649_p2 <= std_logic_vector(unsigned(add_ln64_reg_1019) + unsigned(ap_const_lv11_1));
    add_ln64_2_fu_673_p2 <= std_logic_vector(unsigned(add_ln64_reg_1019) + unsigned(ap_const_lv11_2));
    add_ln64_3_fu_693_p2 <= std_logic_vector(unsigned(add_ln64_reg_1019) + unsigned(ap_const_lv11_3));
    add_ln64_4_fu_713_p2 <= std_logic_vector(unsigned(add_ln64_reg_1019) + unsigned(ap_const_lv11_4));
    add_ln64_5_fu_733_p2 <= std_logic_vector(unsigned(add_ln64_reg_1019) + unsigned(ap_const_lv11_5));
    add_ln64_6_fu_757_p2 <= std_logic_vector(unsigned(add_ln64_reg_1019) + unsigned(ap_const_lv11_6));
    add_ln64_7_fu_781_p2 <= std_logic_vector(unsigned(add_ln64_reg_1019) + unsigned(ap_const_lv11_7));
    add_ln64_8_fu_808_p2 <= std_logic_vector(unsigned(add_ln64_reg_1019) + unsigned(ap_const_lv11_8));
    add_ln64_9_fu_818_p2 <= std_logic_vector(unsigned(add_ln64_reg_1019) + unsigned(ap_const_lv11_9));
    and_ln57_fu_453_p2 <= (xor_ln57_fu_441_p2 and icmp_ln59_fu_447_p2);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(1);
    ap_CS_fsm_pp0_stage10 <= ap_CS_fsm(10);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(2);
    ap_CS_fsm_pp0_stage3 <= ap_CS_fsm(3);
    ap_CS_fsm_pp0_stage4 <= ap_CS_fsm(4);
    ap_CS_fsm_pp0_stage5 <= ap_CS_fsm(5);
    ap_CS_fsm_pp0_stage6 <= ap_CS_fsm(6);
    ap_CS_fsm_pp0_stage7 <= ap_CS_fsm(7);
    ap_CS_fsm_pp0_stage8 <= ap_CS_fsm(8);
    ap_CS_fsm_pp0_stage9 <= ap_CS_fsm(9);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage10_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage10_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage10_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage8_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage8_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage8_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage9_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage9_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage9_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage9_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage10_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage2_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage3_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage4_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp0_stage5_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp0_stage6_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp0_stage7_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state20_pp0_stage8_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state21_pp0_stage9_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state22_pp0_stage10_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state23_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state24_pp0_stage1_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state25_pp0_stage2_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state26_pp0_stage3_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state27_pp0_stage4_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state28_pp0_stage5_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state29_pp0_stage6_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state30_pp0_stage7_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state31_pp0_stage8_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state32_pp0_stage9_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state33_pp0_stage10_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state34_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state35_pp0_stage1_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state36_pp0_stage2_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state37_pp0_stage3_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state38_pp0_stage4_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state39_pp0_stage5_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage2_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state40_pp0_stage6_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state41_pp0_stage7_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state42_pp0_stage8_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state43_pp0_stage9_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state44_pp0_stage10_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state45_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state46_pp0_stage1_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state47_pp0_stage2_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state48_pp0_stage3_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state49_pp0_stage4_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage3_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state50_pp0_stage5_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state51_pp0_stage6_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state52_pp0_stage7_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state53_pp0_stage8_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state54_pp0_stage9_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state55_pp0_stage10_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state56_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state57_pp0_stage1_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state58_pp0_stage2_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state59_pp0_stage3_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage4_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state60_pp0_stage4_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state61_pp0_stage5_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state62_pp0_stage6_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state63_pp0_stage7_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state64_pp0_stage8_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state65_pp0_stage9_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state66_pp0_stage10_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state67_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage5_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage6_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage7_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage8_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_exit_pp0_iter0_stage10_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage10_subdone, icmp_ln57_reg_909)
    begin
        if (((icmp_ln57_reg_909 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage10_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10))) then 
            ap_condition_exit_pp0_iter0_stage10 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage10 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_exit_pp0_iter5_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter5, icmp_ln57_reg_909_pp0_iter4_reg, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (icmp_ln57_reg_909_pp0_iter4_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_condition_exit_pp0_iter5_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter5_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_subdone, ap_done_reg, ap_loop_exit_ready_pp0_iter5_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_exit_ready_pp0_iter5_reg = ap_const_logic_1))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_enable_reg_pp0_iter0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0_reg, ap_start_int)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
            ap_enable_reg_pp0_iter0 <= ap_start_int;
        else 
            ap_enable_reg_pp0_iter0 <= ap_enable_reg_pp0_iter0_reg;
        end if; 
    end process;

    ap_ext_blocking_n <= (ap_const_logic_1 and ap_const_logic_1);

    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_start_int = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6)
    begin
        if (((ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to4_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0_0to4 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to4 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_1to6_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6)
    begin
        if (((ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0_1to6 <= ap_const_logic_1;
        else 
            ap_idle_pp0_1to6 <= ap_const_logic_0;
        end if; 
    end process;

    ap_int_blocking_n <= (ap_const_logic_1 and ap_const_logic_1);
    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage10;

    ap_ready_int_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage10_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage10_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_c1_load_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_loop_init, c1_fu_118)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_c1_load <= ap_const_lv4_0;
        else 
            ap_sig_allocacmp_c1_load <= c1_fu_118;
        end if; 
    end process;


    ap_sig_allocacmp_c2_2_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_loop_init, c2_fu_110)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_c2_2 <= ap_const_lv4_0;
        else 
            ap_sig_allocacmp_c2_2 <= c2_fu_110;
        end if; 
    end process;


    ap_sig_allocacmp_c3_load_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, c3_fu_106, ap_loop_init)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_c3_load <= ap_const_lv4_0;
        else 
            ap_sig_allocacmp_c3_load <= c3_fu_106;
        end if; 
    end process;


    ap_sig_allocacmp_indvar_flatten276_load_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_loop_init, indvar_flatten276_fu_114)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_indvar_flatten276_load <= ap_const_lv8_0;
        else 
            ap_sig_allocacmp_indvar_flatten276_load <= indvar_flatten276_fu_114;
        end if; 
    end process;


    ap_sig_allocacmp_indvar_flatten310_load_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_loop_init, indvar_flatten310_fu_122)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_indvar_flatten310_load <= ap_const_lv11_0;
        else 
            ap_sig_allocacmp_indvar_flatten310_load <= indvar_flatten310_fu_122;
        end if; 
    end process;

    ap_str_blocking_n <= (ap_const_logic_1 and ap_const_logic_1);
    c3_6_cast23_fu_622_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln58_reg_946),7));
    empty_59_fu_395_p0 <= empty_59_fu_395_p00(4 - 1 downto 0);
    empty_59_fu_395_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_sig_allocacmp_c2_2),11));
    empty_59_fu_395_p1 <= ap_const_lv11_79(8 - 1 downto 0);
    empty_fu_560_p0 <= empty_fu_560_p00(4 - 1 downto 0);
    empty_fu_560_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(c2_2_reg_893),7));
    empty_fu_560_p1 <= ap_const_lv7_B(5 - 1 downto 0);
    grp_fu_170_p_ce <= ap_const_logic_1;
    grp_fu_170_p_din0 <= grp_fu_325_p0;
    grp_fu_170_p_din1 <= grp_fu_325_p1;
    grp_fu_170_p_opcode <= ap_const_lv2_0;
    grp_fu_174_p_ce <= ap_const_logic_1;
    grp_fu_174_p_din0 <= grp_fu_330_p0;
    grp_fu_174_p_din1 <= grp_fu_330_p1;

    grp_fu_325_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_CS_fsm_pp0_stage10, reg_334, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage9, reg_339, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage8, reg_344, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage7, reg_349, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage6, reg_354, ap_CS_fsm_pp0_stage5, mul382_i_reg_1180, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage5, ap_block_pp0_stage6, ap_block_pp0_stage7, ap_block_pp0_stage8, ap_block_pp0_stage9, ap_block_pp0_stage10)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            grp_fu_325_p0 <= reg_354;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)))) then 
            grp_fu_325_p0 <= reg_349;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage8) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8)) or ((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)))) then 
            grp_fu_325_p0 <= reg_344;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage9) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9)) or ((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)))) then 
            grp_fu_325_p0 <= reg_339;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage10) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10)) or ((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)))) then 
            grp_fu_325_p0 <= reg_334;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_325_p0 <= mul382_i_reg_1180;
        else 
            grp_fu_325_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_325_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_CS_fsm_pp0_stage10, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage5, mul382_i_1_reg_1200, mul382_i_2_reg_1215, mul382_i_3_reg_1230_pp0_iter2_reg, mul382_i_4_reg_1245_pp0_iter2_reg, mul382_i_5_reg_1255_pp0_iter2_reg, mul382_i_6_reg_1260_pp0_iter3_reg, mul382_i_7_reg_1265_pp0_iter3_reg, mul382_i_8_reg_1270_pp0_iter3_reg, mul382_i_9_reg_1275_pp0_iter4_reg, mul382_i_s_reg_1280_pp0_iter4_reg, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage5, ap_block_pp0_stage6, ap_block_pp0_stage7, ap_block_pp0_stage8, ap_block_pp0_stage9, ap_block_pp0_stage10)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            grp_fu_325_p1 <= mul382_i_s_reg_1280_pp0_iter4_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_325_p1 <= mul382_i_9_reg_1275_pp0_iter4_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            grp_fu_325_p1 <= mul382_i_8_reg_1270_pp0_iter3_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_325_p1 <= mul382_i_7_reg_1265_pp0_iter3_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage8) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8))) then 
            grp_fu_325_p1 <= mul382_i_6_reg_1260_pp0_iter3_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_325_p1 <= mul382_i_5_reg_1255_pp0_iter2_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage9) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9))) then 
            grp_fu_325_p1 <= mul382_i_4_reg_1245_pp0_iter2_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_325_p1 <= mul382_i_3_reg_1230_pp0_iter2_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage10) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10))) then 
            grp_fu_325_p1 <= mul382_i_2_reg_1215;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            grp_fu_325_p1 <= mul382_i_1_reg_1200;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_325_p1 <= ap_const_lv64_0;
        else 
            grp_fu_325_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_330_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage10, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage5, S_buf_load_reg_961, S_buf_load_11_reg_986, S_buf_load_12_reg_1004, S_buf_load_13_reg_1038, S_buf_load_14_reg_1063, S_buf_load_15_reg_1090, S_buf_load_16_reg_1110, S_buf_load_17_reg_1130, S_buf_load_18_reg_1150, S_buf_load_19_reg_1170, S_buf_load_20_reg_1195, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage5, ap_block_pp0_stage6, ap_block_pp0_stage7, ap_block_pp0_stage8, ap_block_pp0_stage9, ap_block_pp0_stage10)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_330_p0 <= S_buf_load_20_reg_1195;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_330_p0 <= S_buf_load_19_reg_1170;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_330_p0 <= S_buf_load_18_reg_1150;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_330_p0 <= S_buf_load_17_reg_1130;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_330_p0 <= S_buf_load_16_reg_1110;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage10) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10))) then 
            grp_fu_330_p0 <= S_buf_load_15_reg_1090;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage9) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9))) then 
            grp_fu_330_p0 <= S_buf_load_14_reg_1063;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage8) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8))) then 
            grp_fu_330_p0 <= S_buf_load_13_reg_1038;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            grp_fu_330_p0 <= S_buf_load_12_reg_1004;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            grp_fu_330_p0 <= S_buf_load_11_reg_986;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            grp_fu_330_p0 <= S_buf_load_reg_961;
        else 
            grp_fu_330_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_330_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage10, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage5, t2_load_reg_1053, t2_load_1_reg_1080, t2_load_2_reg_1100, t2_load_3_reg_1120, t2_load_4_reg_1140, t2_load_5_reg_1160, t2_load_6_reg_1185, t2_load_7_reg_1205, t2_load_8_reg_1220, t2_load_9_reg_1235, t2_load_10_reg_1250, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage5, ap_block_pp0_stage6, ap_block_pp0_stage7, ap_block_pp0_stage8, ap_block_pp0_stage9, ap_block_pp0_stage10)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_330_p1 <= t2_load_10_reg_1250;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_330_p1 <= t2_load_9_reg_1235;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_330_p1 <= t2_load_8_reg_1220;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_330_p1 <= t2_load_7_reg_1205;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_330_p1 <= t2_load_6_reg_1185;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage10) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10))) then 
            grp_fu_330_p1 <= t2_load_5_reg_1160;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage9) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9))) then 
            grp_fu_330_p1 <= t2_load_4_reg_1140;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage8) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8))) then 
            grp_fu_330_p1 <= t2_load_3_reg_1120;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            grp_fu_330_p1 <= t2_load_2_reg_1100;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            grp_fu_330_p1 <= t2_load_1_reg_1080;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            grp_fu_330_p1 <= t2_load_reg_1053;
        else 
            grp_fu_330_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_fu_842_p0 <= grp_fu_842_p00(4 - 1 downto 0);
    grp_fu_842_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln58_fu_465_p3),8));
    grp_fu_842_p1 <= ap_const_lv8_B(4 - 1 downto 0);
    grp_fu_850_p0 <= grp_fu_850_p00(4 - 1 downto 0);
    grp_fu_850_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln57_1_reg_926),11));
    grp_fu_850_p1 <= ap_const_lv11_79(7 - 1 downto 0);
    grp_fu_850_p2 <= grp_fu_850_p20(7 - 1 downto 0);
    grp_fu_850_p20 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln61_1_fu_625_p2),11));
    icmp_ln57_fu_401_p2 <= "1" when (ap_sig_allocacmp_indvar_flatten310_load = ap_const_lv11_533) else "0";
    icmp_ln58_fu_416_p2 <= "1" when (ap_sig_allocacmp_indvar_flatten276_load = ap_const_lv8_79) else "0";
    icmp_ln59_fu_447_p2 <= "1" when (ap_sig_allocacmp_c3_load = ap_const_lv4_B) else "0";
    or_ln58_fu_459_p2 <= (icmp_ln58_fu_416_p2 or and_ln57_fu_453_p2);
    p_mid1272_fu_609_p0 <= p_mid1272_fu_609_p00(4 - 1 downto 0);
    p_mid1272_fu_609_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln58_reg_971),7));
    p_mid1272_fu_609_p1 <= ap_const_lv7_B(5 - 1 downto 0);
    p_mid1274_fu_532_p0 <= p_mid1274_fu_532_p00(4 - 1 downto 0);
    p_mid1274_fu_532_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln58_fu_522_p2),11));
    p_mid1274_fu_532_p1 <= ap_const_lv11_79(8 - 1 downto 0);
    select_ln57_1_fu_428_p3 <= 
        add_ln57_11_fu_422_p2 when (icmp_ln58_fu_416_p2(0) = '1') else 
        ap_sig_allocacmp_c1_load;
    select_ln57_2_fu_600_p3 <= 
        ap_const_lv7_0 when (icmp_ln58_reg_918(0) = '1') else 
        empty_reg_981;
    select_ln57_3_fu_516_p3 <= 
        ap_const_lv11_0 when (icmp_ln58_reg_918(0) = '1') else 
        empty_59_reg_904;
    select_ln57_fu_493_p3 <= 
        ap_const_lv4_0 when (icmp_ln58_reg_918(0) = '1') else 
        c2_2_reg_893;
    select_ln58_1_fu_615_p3 <= 
        p_mid1272_fu_609_p2 when (and_ln57_reg_939(0) = '1') else 
        select_ln57_2_fu_600_p3;
    select_ln58_2_fu_538_p3 <= 
        p_mid1274_fu_532_p2 when (and_ln57_reg_939(0) = '1') else 
        select_ln57_3_fu_516_p3;
    select_ln58_3_fu_545_p3 <= 
        add_ln58_fu_522_p2 when (and_ln57_reg_939(0) = '1') else 
        select_ln57_fu_493_p3;
    select_ln58_4_fu_796_p3 <= 
        ap_const_lv8_1 when (icmp_ln58_reg_918(0) = '1') else 
        add_ln58_1_fu_791_p2;
    select_ln58_fu_465_p3 <= 
        ap_const_lv4_0 when (or_ln58_fu_459_p2(0) = '1') else 
        ap_sig_allocacmp_c3_load;
        sext_ln57_1_fu_772_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln57_10_fu_767_p2),7));

        sext_ln57_fu_748_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln57_9_fu_743_p2),7));


    t2_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage10, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, zext_ln64_1_fu_635_p1, ap_block_pp0_stage4, zext_ln64_2_fu_654_p1, ap_block_pp0_stage5, zext_ln64_3_fu_678_p1, ap_block_pp0_stage6, zext_ln64_4_fu_698_p1, ap_block_pp0_stage7, zext_ln64_5_fu_718_p1, ap_block_pp0_stage8, zext_ln64_6_fu_738_p1, ap_block_pp0_stage9, zext_ln64_7_fu_762_p1, ap_block_pp0_stage10, zext_ln64_8_fu_786_p1, zext_ln64_9_fu_813_p1, zext_ln64_10_fu_823_p1, zext_ln64_11_fu_833_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            t2_address0 <= zext_ln64_11_fu_833_p1(11 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            t2_address0 <= zext_ln64_10_fu_823_p1(11 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            t2_address0 <= zext_ln64_9_fu_813_p1(11 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage10) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10))) then 
            t2_address0 <= zext_ln64_8_fu_786_p1(11 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage9) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9))) then 
            t2_address0 <= zext_ln64_7_fu_762_p1(11 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage8) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8))) then 
            t2_address0 <= zext_ln64_6_fu_738_p1(11 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            t2_address0 <= zext_ln64_5_fu_718_p1(11 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            t2_address0 <= zext_ln64_4_fu_698_p1(11 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            t2_address0 <= zext_ln64_3_fu_678_p1(11 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            t2_address0 <= zext_ln64_2_fu_654_p1(11 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            t2_address0 <= zext_ln64_1_fu_635_p1(11 - 1 downto 0);
        else 
            t2_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    t2_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage10, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage9, ap_block_pp0_stage9_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage8_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001, ap_block_pp0_stage10_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage10_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage9_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)))) then 
            t2_ce0 <= ap_const_logic_1;
        else 
            t2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    v_buf_address0 <= zext_ln61_fu_838_p1(11 - 1 downto 0);

    v_buf_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter6, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            v_buf_ce0 <= ap_const_logic_1;
        else 
            v_buf_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    v_buf_d0 <= reg_354;

    v_buf_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter6, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            v_buf_we0 <= ap_const_logic_1;
        else 
            v_buf_we0 <= ap_const_logic_0;
        end if; 
    end process;

    xor_ln57_fu_441_p2 <= (icmp_ln58_fu_416_p2 xor ap_const_lv1_1);
    zext_ln57_10_fu_688_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln57_6_fu_683_p2),64));
    zext_ln57_11_fu_708_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln57_7_fu_703_p2),64));
    zext_ln57_12_fu_728_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln57_8_fu_723_p2),64));
    zext_ln57_13_fu_752_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln57_fu_748_p1),64));
    zext_ln57_14_fu_776_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln57_1_fu_772_p1),64));
    zext_ln57_1_fu_436_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln57_1_fu_428_p3),64));
    zext_ln57_2_fu_502_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln57_1_reg_926),5));
    zext_ln57_3_fu_511_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln57_1_fu_505_p2),64));
    zext_ln57_4_fu_571_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln57_1_reg_926),6));
    zext_ln57_5_fu_580_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln57_2_fu_574_p2),64));
    zext_ln57_6_fu_595_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln57_3_fu_590_p2),64));
    zext_ln57_7_fu_644_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln57_4_fu_639_p2),64));
    zext_ln57_8_fu_659_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln57_1_reg_926),7));
    zext_ln57_9_fu_668_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln57_5_fu_662_p2),64));
    zext_ln61_fu_838_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln61_reg_1048_pp0_iter5_reg),64));
    zext_ln64_10_fu_823_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln64_9_fu_818_p2),64));
    zext_ln64_11_fu_833_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln64_10_fu_828_p2),64));
    zext_ln64_1_fu_635_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_842_p3),64));
    zext_ln64_2_fu_654_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln64_1_fu_649_p2),64));
    zext_ln64_3_fu_678_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln64_2_fu_673_p2),64));
    zext_ln64_4_fu_698_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln64_3_fu_693_p2),64));
    zext_ln64_5_fu_718_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln64_4_fu_713_p2),64));
    zext_ln64_6_fu_738_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln64_5_fu_733_p2),64));
    zext_ln64_7_fu_762_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln64_6_fu_757_p2),64));
    zext_ln64_8_fu_786_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln64_7_fu_781_p2),64));
    zext_ln64_9_fu_813_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln64_8_fu_808_p2),64));
end behav;
