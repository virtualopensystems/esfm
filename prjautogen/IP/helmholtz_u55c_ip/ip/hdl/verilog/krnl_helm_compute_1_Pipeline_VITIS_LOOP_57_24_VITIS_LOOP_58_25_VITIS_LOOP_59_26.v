// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module krnl_helm_compute_1_Pipeline_VITIS_LOOP_57_24_VITIS_LOOP_58_25_VITIS_LOOP_59_26 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        S_buf_address0,
        S_buf_ce0,
        S_buf_q0,
        v_buf_address0,
        v_buf_ce0,
        v_buf_we0,
        v_buf_d0,
        t2_address0,
        t2_ce0,
        t2_q0,
        ap_ext_blocking_n,
        ap_str_blocking_n,
        ap_int_blocking_n,
        grp_fu_170_p_din0,
        grp_fu_170_p_din1,
        grp_fu_170_p_opcode,
        grp_fu_170_p_dout0,
        grp_fu_170_p_ce,
        grp_fu_174_p_din0,
        grp_fu_174_p_din1,
        grp_fu_174_p_dout0,
        grp_fu_174_p_ce
);

parameter    ap_ST_fsm_pp0_stage0 = 11'd1;
parameter    ap_ST_fsm_pp0_stage1 = 11'd2;
parameter    ap_ST_fsm_pp0_stage2 = 11'd4;
parameter    ap_ST_fsm_pp0_stage3 = 11'd8;
parameter    ap_ST_fsm_pp0_stage4 = 11'd16;
parameter    ap_ST_fsm_pp0_stage5 = 11'd32;
parameter    ap_ST_fsm_pp0_stage6 = 11'd64;
parameter    ap_ST_fsm_pp0_stage7 = 11'd128;
parameter    ap_ST_fsm_pp0_stage8 = 11'd256;
parameter    ap_ST_fsm_pp0_stage9 = 11'd512;
parameter    ap_ST_fsm_pp0_stage10 = 11'd1024;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [6:0] S_buf_address0;
output   S_buf_ce0;
input  [63:0] S_buf_q0;
output  [10:0] v_buf_address0;
output   v_buf_ce0;
output   v_buf_we0;
output  [63:0] v_buf_d0;
output  [10:0] t2_address0;
output   t2_ce0;
input  [63:0] t2_q0;
output   ap_ext_blocking_n;
output   ap_str_blocking_n;
output   ap_int_blocking_n;
output  [63:0] grp_fu_170_p_din0;
output  [63:0] grp_fu_170_p_din1;
output  [1:0] grp_fu_170_p_opcode;
input  [63:0] grp_fu_170_p_dout0;
output   grp_fu_170_p_ce;
output  [63:0] grp_fu_174_p_din0;
output  [63:0] grp_fu_174_p_din1;
input  [63:0] grp_fu_174_p_dout0;
output   grp_fu_174_p_ce;

reg ap_idle;
reg[6:0] S_buf_address0;
reg S_buf_ce0;
reg v_buf_ce0;
reg v_buf_we0;
reg[10:0] t2_address0;
reg t2_ce0;

(* fsm_encoding = "none" *) reg   [10:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage10;
wire    ap_block_state11_pp0_stage10_iter0;
wire    ap_block_state22_pp0_stage10_iter1;
wire    ap_block_state33_pp0_stage10_iter2;
wire    ap_block_state44_pp0_stage10_iter3;
wire    ap_block_state55_pp0_stage10_iter4;
wire    ap_block_state66_pp0_stage10_iter5;
wire    ap_block_pp0_stage10_subdone;
reg   [0:0] icmp_ln57_reg_909;
reg    ap_condition_exit_pp0_iter0_stage10;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg   [63:0] reg_334;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_state5_pp0_stage4_iter0;
wire    ap_block_state16_pp0_stage4_iter1;
wire    ap_block_state27_pp0_stage4_iter2;
wire    ap_block_state38_pp0_stage4_iter3;
wire    ap_block_state49_pp0_stage4_iter4;
wire    ap_block_state60_pp0_stage4_iter5;
wire    ap_block_pp0_stage4_11001;
wire    ap_CS_fsm_pp0_stage9;
wire    ap_block_state10_pp0_stage9_iter0;
wire    ap_block_state21_pp0_stage9_iter1;
wire    ap_block_state32_pp0_stage9_iter2;
wire    ap_block_state43_pp0_stage9_iter3;
wire    ap_block_state54_pp0_stage9_iter4;
wire    ap_block_state65_pp0_stage9_iter5;
wire    ap_block_pp0_stage9_11001;
reg   [63:0] reg_339;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state4_pp0_stage3_iter0;
wire    ap_block_state15_pp0_stage3_iter1;
wire    ap_block_state26_pp0_stage3_iter2;
wire    ap_block_state37_pp0_stage3_iter3;
wire    ap_block_state48_pp0_stage3_iter4;
wire    ap_block_state59_pp0_stage3_iter5;
wire    ap_block_pp0_stage3_11001;
wire    ap_CS_fsm_pp0_stage8;
wire    ap_block_state9_pp0_stage8_iter0;
wire    ap_block_state20_pp0_stage8_iter1;
wire    ap_block_state31_pp0_stage8_iter2;
wire    ap_block_state42_pp0_stage8_iter3;
wire    ap_block_state53_pp0_stage8_iter4;
wire    ap_block_state64_pp0_stage8_iter5;
wire    ap_block_pp0_stage8_11001;
reg   [63:0] reg_344;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state3_pp0_stage2_iter0;
wire    ap_block_state14_pp0_stage2_iter1;
wire    ap_block_state25_pp0_stage2_iter2;
wire    ap_block_state36_pp0_stage2_iter3;
wire    ap_block_state47_pp0_stage2_iter4;
wire    ap_block_state58_pp0_stage2_iter5;
wire    ap_block_pp0_stage2_11001;
wire    ap_CS_fsm_pp0_stage7;
wire    ap_block_state8_pp0_stage7_iter0;
wire    ap_block_state19_pp0_stage7_iter1;
wire    ap_block_state30_pp0_stage7_iter2;
wire    ap_block_state41_pp0_stage7_iter3;
wire    ap_block_state52_pp0_stage7_iter4;
wire    ap_block_state63_pp0_stage7_iter5;
wire    ap_block_pp0_stage7_11001;
reg   [63:0] reg_349;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state2_pp0_stage1_iter0;
wire    ap_block_state13_pp0_stage1_iter1;
wire    ap_block_state24_pp0_stage1_iter2;
wire    ap_block_state35_pp0_stage1_iter3;
wire    ap_block_state46_pp0_stage1_iter4;
wire    ap_block_state57_pp0_stage1_iter5;
wire    ap_block_pp0_stage1_11001;
wire    ap_CS_fsm_pp0_stage6;
wire    ap_block_state7_pp0_stage6_iter0;
wire    ap_block_state18_pp0_stage6_iter1;
wire    ap_block_state29_pp0_stage6_iter2;
wire    ap_block_state40_pp0_stage6_iter3;
wire    ap_block_state51_pp0_stage6_iter4;
wire    ap_block_state62_pp0_stage6_iter5;
wire    ap_block_pp0_stage6_11001;
reg   [63:0] reg_354;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state12_pp0_stage0_iter1;
wire    ap_block_state23_pp0_stage0_iter2;
wire    ap_block_state34_pp0_stage0_iter3;
wire    ap_block_state45_pp0_stage0_iter4;
wire    ap_block_state56_pp0_stage0_iter5;
wire    ap_block_state67_pp0_stage0_iter6;
wire    ap_block_pp0_stage0_11001;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_state6_pp0_stage5_iter0;
wire    ap_block_state17_pp0_stage5_iter1;
wire    ap_block_state28_pp0_stage5_iter2;
wire    ap_block_state39_pp0_stage5_iter3;
wire    ap_block_state50_pp0_stage5_iter4;
wire    ap_block_state61_pp0_stage5_iter5;
wire    ap_block_pp0_stage5_11001;
wire    ap_block_pp0_stage10_11001;
reg   [3:0] c2_2_reg_893;
reg   [10:0] indvar_flatten310_load_reg_899;
wire   [10:0] empty_59_fu_395_p2;
reg   [10:0] empty_59_reg_904;
wire   [0:0] icmp_ln57_fu_401_p2;
reg   [0:0] icmp_ln57_reg_909_pp0_iter1_reg;
reg   [0:0] icmp_ln57_reg_909_pp0_iter2_reg;
reg   [0:0] icmp_ln57_reg_909_pp0_iter3_reg;
reg   [0:0] icmp_ln57_reg_909_pp0_iter4_reg;
reg   [7:0] indvar_flatten276_load_reg_913;
wire   [0:0] icmp_ln58_fu_416_p2;
reg   [0:0] icmp_ln58_reg_918;
wire   [3:0] select_ln57_1_fu_428_p3;
reg   [3:0] select_ln57_1_reg_926;
wire   [0:0] and_ln57_fu_453_p2;
reg   [0:0] and_ln57_reg_939;
wire   [3:0] select_ln58_fu_465_p3;
reg   [3:0] select_ln58_reg_946;
reg   [63:0] S_buf_load_reg_961;
wire   [3:0] add_ln58_fu_522_p2;
reg   [3:0] add_ln58_reg_971;
wire   [10:0] select_ln58_2_fu_538_p3;
reg   [10:0] select_ln58_2_reg_976;
wire   [6:0] empty_fu_560_p2;
reg   [6:0] empty_reg_981;
reg   [63:0] S_buf_load_11_reg_986;
wire   [5:0] zext_ln57_4_fu_571_p1;
reg   [5:0] zext_ln57_4_reg_991;
reg   [63:0] S_buf_load_12_reg_1004;
wire   [10:0] grp_fu_842_p3;
reg   [10:0] add_ln64_reg_1019;
reg   [63:0] S_buf_load_13_reg_1038;
wire   [10:0] grp_fu_850_p3;
reg   [10:0] add_ln61_reg_1048;
reg   [10:0] add_ln61_reg_1048_pp0_iter1_reg;
reg   [10:0] add_ln61_reg_1048_pp0_iter2_reg;
reg   [10:0] add_ln61_reg_1048_pp0_iter3_reg;
reg   [10:0] add_ln61_reg_1048_pp0_iter4_reg;
reg   [10:0] add_ln61_reg_1048_pp0_iter5_reg;
reg   [63:0] t2_load_reg_1053;
reg   [63:0] S_buf_load_14_reg_1063;
wire   [6:0] zext_ln57_8_fu_659_p1;
reg   [6:0] zext_ln57_8_reg_1068;
reg   [63:0] t2_load_1_reg_1080;
reg   [63:0] S_buf_load_15_reg_1090;
reg   [63:0] t2_load_2_reg_1100;
reg   [63:0] S_buf_load_16_reg_1110;
reg   [63:0] t2_load_3_reg_1120;
reg   [63:0] S_buf_load_17_reg_1130;
reg   [63:0] t2_load_4_reg_1140;
reg   [63:0] S_buf_load_18_reg_1150;
reg   [63:0] t2_load_5_reg_1160;
reg   [63:0] S_buf_load_19_reg_1170;
reg   [63:0] mul382_i_reg_1180;
reg   [63:0] t2_load_6_reg_1185;
reg   [63:0] S_buf_load_20_reg_1195;
reg   [63:0] mul382_i_1_reg_1200;
reg   [63:0] t2_load_7_reg_1205;
reg   [63:0] mul382_i_2_reg_1215;
reg   [63:0] t2_load_8_reg_1220;
reg   [63:0] mul382_i_3_reg_1230;
reg   [63:0] mul382_i_3_reg_1230_pp0_iter2_reg;
reg   [63:0] t2_load_9_reg_1235;
reg   [63:0] mul382_i_4_reg_1245;
reg   [63:0] mul382_i_4_reg_1245_pp0_iter2_reg;
reg   [63:0] t2_load_10_reg_1250;
reg   [63:0] mul382_i_5_reg_1255;
reg   [63:0] mul382_i_5_reg_1255_pp0_iter2_reg;
reg   [63:0] mul382_i_6_reg_1260;
reg   [63:0] mul382_i_6_reg_1260_pp0_iter2_reg;
reg   [63:0] mul382_i_6_reg_1260_pp0_iter3_reg;
reg   [63:0] mul382_i_7_reg_1265;
reg   [63:0] mul382_i_7_reg_1265_pp0_iter2_reg;
reg   [63:0] mul382_i_7_reg_1265_pp0_iter3_reg;
reg   [63:0] mul382_i_8_reg_1270;
reg   [63:0] mul382_i_8_reg_1270_pp0_iter2_reg;
reg   [63:0] mul382_i_8_reg_1270_pp0_iter3_reg;
reg   [63:0] mul382_i_9_reg_1275;
reg   [63:0] mul382_i_9_reg_1275_pp0_iter2_reg;
reg   [63:0] mul382_i_9_reg_1275_pp0_iter3_reg;
reg   [63:0] mul382_i_9_reg_1275_pp0_iter4_reg;
reg   [63:0] mul382_i_s_reg_1280;
reg   [63:0] mul382_i_s_reg_1280_pp0_iter2_reg;
reg   [63:0] mul382_i_s_reg_1280_pp0_iter3_reg;
reg   [63:0] mul382_i_s_reg_1280_pp0_iter4_reg;
reg    ap_enable_reg_pp0_iter0_reg;
wire    ap_block_pp0_stage0_subdone;
wire   [63:0] zext_ln57_1_fu_436_p1;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln57_3_fu_511_p1;
wire    ap_block_pp0_stage1;
wire   [63:0] zext_ln57_5_fu_580_p1;
wire    ap_block_pp0_stage2;
wire   [63:0] zext_ln57_6_fu_595_p1;
wire    ap_block_pp0_stage3;
wire   [63:0] zext_ln64_1_fu_635_p1;
wire   [63:0] zext_ln57_7_fu_644_p1;
wire    ap_block_pp0_stage4;
wire   [63:0] zext_ln64_2_fu_654_p1;
wire   [63:0] zext_ln57_9_fu_668_p1;
wire    ap_block_pp0_stage5;
wire   [63:0] zext_ln64_3_fu_678_p1;
wire   [63:0] zext_ln57_10_fu_688_p1;
wire    ap_block_pp0_stage6;
wire   [63:0] zext_ln64_4_fu_698_p1;
wire   [63:0] zext_ln57_11_fu_708_p1;
wire    ap_block_pp0_stage7;
wire   [63:0] zext_ln64_5_fu_718_p1;
wire   [63:0] zext_ln57_12_fu_728_p1;
wire    ap_block_pp0_stage8;
wire   [63:0] zext_ln64_6_fu_738_p1;
wire   [63:0] zext_ln57_13_fu_752_p1;
wire    ap_block_pp0_stage9;
wire   [63:0] zext_ln64_7_fu_762_p1;
wire   [63:0] zext_ln57_14_fu_776_p1;
wire    ap_block_pp0_stage10;
wire   [63:0] zext_ln64_8_fu_786_p1;
wire   [63:0] zext_ln64_9_fu_813_p1;
wire   [63:0] zext_ln64_10_fu_823_p1;
wire   [63:0] zext_ln64_11_fu_833_p1;
wire   [63:0] zext_ln61_fu_838_p1;
reg   [3:0] c3_fu_106;
wire   [3:0] add_ln59_fu_477_p2;
wire    ap_loop_init;
reg   [3:0] ap_sig_allocacmp_c3_load;
reg   [3:0] c2_fu_110;
wire   [3:0] select_ln58_3_fu_545_p3;
reg   [3:0] ap_sig_allocacmp_c2_2;
reg   [7:0] indvar_flatten276_fu_114;
wire   [7:0] select_ln58_4_fu_796_p3;
reg   [7:0] ap_sig_allocacmp_indvar_flatten276_load;
reg   [3:0] c1_fu_118;
reg   [3:0] ap_sig_allocacmp_c1_load;
reg   [10:0] indvar_flatten310_fu_122;
wire   [10:0] add_ln57_fu_566_p2;
reg   [10:0] ap_sig_allocacmp_indvar_flatten310_load;
reg   [63:0] grp_fu_325_p0;
reg   [63:0] grp_fu_325_p1;
reg   [63:0] grp_fu_330_p0;
reg   [63:0] grp_fu_330_p1;
wire   [3:0] empty_59_fu_395_p0;
wire   [7:0] empty_59_fu_395_p1;
wire   [3:0] add_ln57_11_fu_422_p2;
wire   [0:0] icmp_ln59_fu_447_p2;
wire   [0:0] xor_ln57_fu_441_p2;
wire   [0:0] or_ln58_fu_459_p2;
wire   [4:0] zext_ln57_2_fu_502_p1;
wire   [4:0] add_ln57_1_fu_505_p2;
wire   [3:0] select_ln57_fu_493_p3;
wire   [3:0] p_mid1274_fu_532_p0;
wire   [7:0] p_mid1274_fu_532_p1;
wire   [10:0] p_mid1274_fu_532_p2;
wire   [10:0] select_ln57_3_fu_516_p3;
wire   [3:0] empty_fu_560_p0;
wire   [4:0] empty_fu_560_p1;
wire   [5:0] add_ln57_2_fu_574_p2;
wire   [5:0] add_ln57_3_fu_590_p2;
wire   [3:0] p_mid1272_fu_609_p0;
wire   [4:0] p_mid1272_fu_609_p1;
wire   [6:0] p_mid1272_fu_609_p2;
wire   [6:0] select_ln57_2_fu_600_p3;
wire   [6:0] select_ln58_1_fu_615_p3;
wire   [6:0] c3_6_cast23_fu_622_p1;
wire   [6:0] add_ln61_1_fu_625_p2;
wire   [5:0] add_ln57_4_fu_639_p2;
(* use_dsp48 = "no" *) wire   [10:0] add_ln64_1_fu_649_p2;
wire   [6:0] add_ln57_5_fu_662_p2;
(* use_dsp48 = "no" *) wire   [10:0] add_ln64_2_fu_673_p2;
wire   [6:0] add_ln57_6_fu_683_p2;
(* use_dsp48 = "no" *) wire   [10:0] add_ln64_3_fu_693_p2;
wire   [6:0] add_ln57_7_fu_703_p2;
(* use_dsp48 = "no" *) wire   [10:0] add_ln64_4_fu_713_p2;
wire   [6:0] add_ln57_8_fu_723_p2;
(* use_dsp48 = "no" *) wire   [10:0] add_ln64_5_fu_733_p2;
wire   [5:0] add_ln57_9_fu_743_p2;
wire  signed [6:0] sext_ln57_fu_748_p1;
(* use_dsp48 = "no" *) wire   [10:0] add_ln64_6_fu_757_p2;
wire   [5:0] add_ln57_10_fu_767_p2;
wire  signed [6:0] sext_ln57_1_fu_772_p1;
(* use_dsp48 = "no" *) wire   [10:0] add_ln64_7_fu_781_p2;
wire   [7:0] add_ln58_1_fu_791_p2;
(* use_dsp48 = "no" *) wire   [10:0] add_ln64_8_fu_808_p2;
(* use_dsp48 = "no" *) wire   [10:0] add_ln64_9_fu_818_p2;
(* use_dsp48 = "no" *) wire   [10:0] add_ln64_10_fu_828_p2;
wire   [3:0] grp_fu_842_p0;
wire   [3:0] grp_fu_842_p1;
wire   [3:0] grp_fu_850_p0;
wire   [6:0] grp_fu_850_p1;
wire   [6:0] grp_fu_850_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_condition_exit_pp0_iter5_stage0;
reg    ap_idle_pp0_0to4;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg   [10:0] ap_NS_fsm;
reg    ap_idle_pp0_1to6;
wire    ap_block_pp0_stage1_subdone;
wire    ap_block_pp0_stage2_subdone;
wire    ap_block_pp0_stage3_subdone;
wire    ap_block_pp0_stage4_subdone;
wire    ap_block_pp0_stage5_subdone;
wire    ap_block_pp0_stage6_subdone;
wire    ap_block_pp0_stage7_subdone;
wire    ap_block_pp0_stage8_subdone;
wire    ap_block_pp0_stage9_subdone;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_block_pp0_stage0_00001;
wire    ap_block_pp0_stage5_00001;
wire    ap_block_pp0_stage10_00001;
wire    ap_block_pp0_stage4_00001;
wire    ap_block_pp0_stage9_00001;
wire    ap_block_pp0_stage3_00001;
wire    ap_block_pp0_stage8_00001;
wire    ap_block_pp0_stage2_00001;
wire    ap_block_pp0_stage7_00001;
wire    ap_block_pp0_stage1_00001;
wire    ap_block_pp0_stage6_00001;
wire   [10:0] empty_59_fu_395_p00;
wire   [6:0] empty_fu_560_p00;
wire   [7:0] grp_fu_842_p00;
wire   [10:0] grp_fu_850_p00;
wire   [10:0] grp_fu_850_p20;
wire   [6:0] p_mid1272_fu_609_p00;
wire   [10:0] p_mid1274_fu_532_p00;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 11'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 ap_done_reg = 1'b0;
end

krnl_helm_mul_4ns_8ns_11_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 4 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 11 ))
mul_4ns_8ns_11_1_1_U120(
    .din0(empty_59_fu_395_p0),
    .din1(empty_59_fu_395_p1),
    .dout(empty_59_fu_395_p2)
);

krnl_helm_mul_4ns_8ns_11_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 4 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 11 ))
mul_4ns_8ns_11_1_1_U121(
    .din0(p_mid1274_fu_532_p0),
    .din1(p_mid1274_fu_532_p1),
    .dout(p_mid1274_fu_532_p2)
);

krnl_helm_mul_4ns_5ns_7_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 4 ),
    .din1_WIDTH( 5 ),
    .dout_WIDTH( 7 ))
mul_4ns_5ns_7_1_1_U122(
    .din0(empty_fu_560_p0),
    .din1(empty_fu_560_p1),
    .dout(empty_fu_560_p2)
);

krnl_helm_mul_4ns_5ns_7_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 4 ),
    .din1_WIDTH( 5 ),
    .dout_WIDTH( 7 ))
mul_4ns_5ns_7_1_1_U123(
    .din0(p_mid1272_fu_609_p0),
    .din1(p_mid1272_fu_609_p1),
    .dout(p_mid1272_fu_609_p2)
);

krnl_helm_mac_muladd_4ns_4ns_11ns_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 4 ),
    .din1_WIDTH( 4 ),
    .din2_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
mac_muladd_4ns_4ns_11ns_11_4_1_U124(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_842_p0),
    .din1(grp_fu_842_p1),
    .din2(select_ln58_2_reg_976),
    .ce(1'b1),
    .dout(grp_fu_842_p3)
);

krnl_helm_mac_muladd_4ns_7ns_7ns_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 4 ),
    .din1_WIDTH( 7 ),
    .din2_WIDTH( 7 ),
    .dout_WIDTH( 11 ))
mac_muladd_4ns_7ns_7ns_11_4_1_U125(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_850_p0),
    .din1(grp_fu_850_p1),
    .din2(grp_fu_850_p2),
    .ce(1'b1),
    .dout(grp_fu_850_p3)
);

krnl_helm_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage10),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_exit_ready_pp0_iter5_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage10)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage10_subdone) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage10_subdone) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage10_subdone) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage10_subdone) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage10_subdone) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter6 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage10_subdone) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter5_stage0) & (ap_idle_pp0_0to4 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage10_11001) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter5_stage0) & (ap_idle_pp0_0to4 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage10_11001) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter5_stage0) & (ap_idle_pp0_0to4 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter3_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage10_11001) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter5_stage0) & (ap_idle_pp0_0to4 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter4_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage10_11001) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter5_stage0) & (ap_idle_pp0_0to4 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter5_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage10_11001) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln57_fu_401_p2 == 1'd0))) begin
            c1_fu_118 <= select_ln57_1_fu_428_p3;
        end else if ((ap_loop_init == 1'b1)) begin
            c1_fu_118 <= 4'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        c2_fu_110 <= 4'd0;
    end else if (((icmp_ln57_reg_909 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        c2_fu_110 <= select_ln58_3_fu_545_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln57_fu_401_p2 == 1'd0))) begin
            c3_fu_106 <= add_ln59_fu_477_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            c3_fu_106 <= 4'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_flatten276_fu_114 <= 8'd0;
    end else if (((icmp_ln57_reg_909 == 1'd0) & (1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
        indvar_flatten276_fu_114 <= select_ln58_4_fu_796_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_flatten310_fu_122 <= 11'd0;
    end else if (((icmp_ln57_reg_909 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        indvar_flatten310_fu_122 <= add_ln57_fu_566_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln57_reg_909 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        S_buf_load_11_reg_986 <= S_buf_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln57_reg_909 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        S_buf_load_12_reg_1004 <= S_buf_q0;
        add_ln64_reg_1019 <= grp_fu_842_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln57_reg_909 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        S_buf_load_13_reg_1038 <= S_buf_q0;
        add_ln61_reg_1048 <= grp_fu_850_p3;
        t2_load_reg_1053 <= t2_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln57_reg_909 == 1'd0) & (1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        S_buf_load_14_reg_1063 <= S_buf_q0;
        t2_load_1_reg_1080 <= t2_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln57_reg_909 == 1'd0) & (1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        S_buf_load_15_reg_1090 <= S_buf_q0;
        t2_load_2_reg_1100 <= t2_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln57_reg_909 == 1'd0) & (1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        S_buf_load_16_reg_1110 <= S_buf_q0;
        t2_load_3_reg_1120 <= t2_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln57_reg_909 == 1'd0) & (1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        S_buf_load_17_reg_1130 <= S_buf_q0;
        t2_load_4_reg_1140 <= t2_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln57_reg_909 == 1'd0) & (1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
        S_buf_load_18_reg_1150 <= S_buf_q0;
        t2_load_5_reg_1160 <= t2_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln57_reg_909 == 1'd0) & (1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
        S_buf_load_19_reg_1170 <= S_buf_q0;
        mul382_i_reg_1180 <= grp_fu_174_p_dout0;
        t2_load_6_reg_1185 <= t2_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        S_buf_load_20_reg_1195 <= S_buf_q0;
        mul382_i_1_reg_1200 <= grp_fu_174_p_dout0;
        t2_load_7_reg_1205 <= t2_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln57_reg_909 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        S_buf_load_reg_961 <= S_buf_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln57_reg_909 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        add_ln58_reg_971 <= add_ln58_fu_522_p2;
        select_ln58_2_reg_976 <= select_ln58_2_fu_538_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        add_ln61_reg_1048_pp0_iter1_reg <= add_ln61_reg_1048;
        add_ln61_reg_1048_pp0_iter2_reg <= add_ln61_reg_1048_pp0_iter1_reg;
        add_ln61_reg_1048_pp0_iter3_reg <= add_ln61_reg_1048_pp0_iter2_reg;
        add_ln61_reg_1048_pp0_iter4_reg <= add_ln61_reg_1048_pp0_iter3_reg;
        add_ln61_reg_1048_pp0_iter5_reg <= add_ln61_reg_1048_pp0_iter4_reg;
        mul382_i_5_reg_1255_pp0_iter2_reg <= mul382_i_5_reg_1255;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln57_fu_401_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        and_ln57_reg_939 <= and_ln57_fu_453_p2;
        icmp_ln58_reg_918 <= icmp_ln58_fu_416_p2;
        indvar_flatten276_load_reg_913 <= ap_sig_allocacmp_indvar_flatten276_load;
        select_ln57_1_reg_926 <= select_ln57_1_fu_428_p3;
        select_ln58_reg_946 <= select_ln58_fu_465_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        c2_2_reg_893 <= ap_sig_allocacmp_c2_2;
        empty_59_reg_904 <= empty_59_fu_395_p2;
        icmp_ln57_reg_909 <= icmp_ln57_fu_401_p2;
        icmp_ln57_reg_909_pp0_iter1_reg <= icmp_ln57_reg_909;
        icmp_ln57_reg_909_pp0_iter2_reg <= icmp_ln57_reg_909_pp0_iter1_reg;
        icmp_ln57_reg_909_pp0_iter3_reg <= icmp_ln57_reg_909_pp0_iter2_reg;
        icmp_ln57_reg_909_pp0_iter4_reg <= icmp_ln57_reg_909_pp0_iter3_reg;
        indvar_flatten310_load_reg_899 <= ap_sig_allocacmp_indvar_flatten310_load;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln58_reg_918 == 1'd0) & (1'd0 == and_ln57_reg_939) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        empty_reg_981 <= empty_fu_560_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        mul382_i_2_reg_1215 <= grp_fu_174_p_dout0;
        t2_load_8_reg_1220 <= t2_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        mul382_i_3_reg_1230 <= grp_fu_174_p_dout0;
        t2_load_9_reg_1235 <= t2_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        mul382_i_3_reg_1230_pp0_iter2_reg <= mul382_i_3_reg_1230;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        mul382_i_4_reg_1245 <= grp_fu_174_p_dout0;
        t2_load_10_reg_1250 <= t2_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        mul382_i_4_reg_1245_pp0_iter2_reg <= mul382_i_4_reg_1245;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        mul382_i_5_reg_1255 <= grp_fu_174_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        mul382_i_6_reg_1260 <= grp_fu_174_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        mul382_i_6_reg_1260_pp0_iter2_reg <= mul382_i_6_reg_1260;
        mul382_i_6_reg_1260_pp0_iter3_reg <= mul382_i_6_reg_1260_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        mul382_i_7_reg_1265 <= grp_fu_174_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        mul382_i_7_reg_1265_pp0_iter2_reg <= mul382_i_7_reg_1265;
        mul382_i_7_reg_1265_pp0_iter3_reg <= mul382_i_7_reg_1265_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        mul382_i_8_reg_1270 <= grp_fu_174_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        mul382_i_8_reg_1270_pp0_iter2_reg <= mul382_i_8_reg_1270;
        mul382_i_8_reg_1270_pp0_iter3_reg <= mul382_i_8_reg_1270_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        mul382_i_9_reg_1275 <= grp_fu_174_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        mul382_i_9_reg_1275_pp0_iter2_reg <= mul382_i_9_reg_1275;
        mul382_i_9_reg_1275_pp0_iter3_reg <= mul382_i_9_reg_1275_pp0_iter2_reg;
        mul382_i_9_reg_1275_pp0_iter4_reg <= mul382_i_9_reg_1275_pp0_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
        mul382_i_s_reg_1280 <= grp_fu_174_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage9_11001) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
        mul382_i_s_reg_1280_pp0_iter2_reg <= mul382_i_s_reg_1280;
        mul382_i_s_reg_1280_pp0_iter3_reg <= mul382_i_s_reg_1280_pp0_iter2_reg;
        mul382_i_s_reg_1280_pp0_iter4_reg <= mul382_i_s_reg_1280_pp0_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)))) begin
        reg_334 <= grp_fu_170_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
        reg_339 <= grp_fu_170_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        reg_344 <= grp_fu_170_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        reg_349 <= grp_fu_170_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        reg_354 <= grp_fu_170_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln57_reg_909 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        zext_ln57_4_reg_991[3 : 0] <= zext_ln57_4_fu_571_p1[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln57_reg_909 == 1'd0) & (1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        zext_ln57_8_reg_1068[3 : 0] <= zext_ln57_8_fu_659_p1[3 : 0];
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage10) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
            S_buf_address0 = zext_ln57_14_fu_776_p1;
        end else if (((1'b0 == ap_block_pp0_stage9) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
            S_buf_address0 = zext_ln57_13_fu_752_p1;
        end else if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
            S_buf_address0 = zext_ln57_12_fu_728_p1;
        end else if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            S_buf_address0 = zext_ln57_11_fu_708_p1;
        end else if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            S_buf_address0 = zext_ln57_10_fu_688_p1;
        end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            S_buf_address0 = zext_ln57_9_fu_668_p1;
        end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            S_buf_address0 = zext_ln57_7_fu_644_p1;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            S_buf_address0 = zext_ln57_6_fu_595_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            S_buf_address0 = zext_ln57_5_fu_580_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            S_buf_address0 = zext_ln57_3_fu_511_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            S_buf_address0 = zext_ln57_1_fu_436_p1;
        end else begin
            S_buf_address0 = 'bx;
        end
    end else begin
        S_buf_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)))) begin
        S_buf_ce0 = 1'b1;
    end else begin
        S_buf_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln57_reg_909 == 1'd1) & (1'b0 == ap_block_pp0_stage10_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
        ap_condition_exit_pp0_iter0_stage10 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage10 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter5 == 1'b1) & (icmp_ln57_reg_909_pp0_iter4_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter5_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter5_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_exit_ready_pp0_iter5_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start_int == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to4 = 1'b1;
    end else begin
        ap_idle_pp0_0to4 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0_1to6 = 1'b1;
    end else begin
        ap_idle_pp0_1to6 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage10_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_c1_load = 4'd0;
    end else begin
        ap_sig_allocacmp_c1_load = c1_fu_118;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_c2_2 = 4'd0;
    end else begin
        ap_sig_allocacmp_c2_2 = c2_fu_110;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_c3_load = 4'd0;
    end else begin
        ap_sig_allocacmp_c3_load = c3_fu_106;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_indvar_flatten276_load = 8'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten276_load = indvar_flatten276_fu_114;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_indvar_flatten310_load = 11'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten310_load = indvar_flatten310_fu_122;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        grp_fu_325_p0 = reg_354;
    end else if ((((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        grp_fu_325_p0 = reg_349;
    end else if ((((1'b0 == ap_block_pp0_stage8) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
        grp_fu_325_p0 = reg_344;
    end else if ((((1'b0 == ap_block_pp0_stage9) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)))) begin
        grp_fu_325_p0 = reg_339;
    end else if ((((1'b0 == ap_block_pp0_stage10) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)))) begin
        grp_fu_325_p0 = reg_334;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_325_p0 = mul382_i_reg_1180;
    end else begin
        grp_fu_325_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_325_p1 = mul382_i_s_reg_1280_pp0_iter4_reg;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_325_p1 = mul382_i_9_reg_1275_pp0_iter4_reg;
    end else if (((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_325_p1 = mul382_i_8_reg_1270_pp0_iter3_reg;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_325_p1 = mul382_i_7_reg_1265_pp0_iter3_reg;
    end else if (((1'b0 == ap_block_pp0_stage8) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        grp_fu_325_p1 = mul382_i_6_reg_1260_pp0_iter3_reg;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_325_p1 = mul382_i_5_reg_1255_pp0_iter2_reg;
    end else if (((1'b0 == ap_block_pp0_stage9) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
        grp_fu_325_p1 = mul382_i_4_reg_1245_pp0_iter2_reg;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_325_p1 = mul382_i_3_reg_1230_pp0_iter2_reg;
    end else if (((1'b0 == ap_block_pp0_stage10) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
        grp_fu_325_p1 = mul382_i_2_reg_1215;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_325_p1 = mul382_i_1_reg_1200;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_325_p1 = 64'd0;
    end else begin
        grp_fu_325_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_330_p0 = S_buf_load_20_reg_1195;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_330_p0 = S_buf_load_19_reg_1170;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_330_p0 = S_buf_load_18_reg_1150;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_330_p0 = S_buf_load_17_reg_1130;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_330_p0 = S_buf_load_16_reg_1110;
    end else if (((1'b0 == ap_block_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
        grp_fu_330_p0 = S_buf_load_15_reg_1090;
    end else if (((1'b0 == ap_block_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
        grp_fu_330_p0 = S_buf_load_14_reg_1063;
    end else if (((1'b0 == ap_block_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        grp_fu_330_p0 = S_buf_load_13_reg_1038;
    end else if (((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_330_p0 = S_buf_load_12_reg_1004;
    end else if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_330_p0 = S_buf_load_11_reg_986;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_330_p0 = S_buf_load_reg_961;
    end else begin
        grp_fu_330_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_330_p1 = t2_load_10_reg_1250;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_330_p1 = t2_load_9_reg_1235;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_330_p1 = t2_load_8_reg_1220;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_330_p1 = t2_load_7_reg_1205;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_330_p1 = t2_load_6_reg_1185;
    end else if (((1'b0 == ap_block_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
        grp_fu_330_p1 = t2_load_5_reg_1160;
    end else if (((1'b0 == ap_block_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
        grp_fu_330_p1 = t2_load_4_reg_1140;
    end else if (((1'b0 == ap_block_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        grp_fu_330_p1 = t2_load_3_reg_1120;
    end else if (((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_330_p1 = t2_load_2_reg_1100;
    end else if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_330_p1 = t2_load_1_reg_1080;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_330_p1 = t2_load_reg_1053;
    end else begin
        grp_fu_330_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        t2_address0 = zext_ln64_11_fu_833_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        t2_address0 = zext_ln64_10_fu_823_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        t2_address0 = zext_ln64_9_fu_813_p1;
    end else if (((1'b0 == ap_block_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
        t2_address0 = zext_ln64_8_fu_786_p1;
    end else if (((1'b0 == ap_block_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
        t2_address0 = zext_ln64_7_fu_762_p1;
    end else if (((1'b0 == ap_block_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        t2_address0 = zext_ln64_6_fu_738_p1;
    end else if (((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        t2_address0 = zext_ln64_5_fu_718_p1;
    end else if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        t2_address0 = zext_ln64_4_fu_698_p1;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        t2_address0 = zext_ln64_3_fu_678_p1;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        t2_address0 = zext_ln64_2_fu_654_p1;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        t2_address0 = zext_ln64_1_fu_635_p1;
    end else begin
        t2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)))) begin
        t2_ce0 = 1'b1;
    end else begin
        t2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v_buf_ce0 = 1'b1;
    end else begin
        v_buf_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v_buf_we0 = 1'b1;
    end else begin
        v_buf_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if (((1'b1 == ap_condition_exit_pp0_iter5_stage0) & (ap_idle_pp0_0to4 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to6 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        ap_ST_fsm_pp0_stage8 : begin
            if ((1'b0 == ap_block_pp0_stage8_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end
        end
        ap_ST_fsm_pp0_stage9 : begin
            if ((1'b0 == ap_block_pp0_stage9_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end
        end
        ap_ST_fsm_pp0_stage10 : begin
            if ((1'b0 == ap_block_pp0_stage10_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln57_10_fu_767_p2 = ($signed(zext_ln57_4_reg_991) + $signed(6'd46));

assign add_ln57_11_fu_422_p2 = (ap_sig_allocacmp_c1_load + 4'd1);

assign add_ln57_1_fu_505_p2 = (zext_ln57_2_fu_502_p1 + 5'd11);

assign add_ln57_2_fu_574_p2 = (zext_ln57_4_fu_571_p1 + 6'd22);

assign add_ln57_3_fu_590_p2 = ($signed(zext_ln57_4_reg_991) + $signed(6'd33));

assign add_ln57_4_fu_639_p2 = ($signed(zext_ln57_4_reg_991) + $signed(6'd44));

assign add_ln57_5_fu_662_p2 = (zext_ln57_8_fu_659_p1 + 7'd55);

assign add_ln57_6_fu_683_p2 = ($signed(zext_ln57_8_reg_1068) + $signed(7'd66));

assign add_ln57_7_fu_703_p2 = ($signed(zext_ln57_8_reg_1068) + $signed(7'd77));

assign add_ln57_8_fu_723_p2 = ($signed(zext_ln57_8_reg_1068) + $signed(7'd88));

assign add_ln57_9_fu_743_p2 = ($signed(zext_ln57_4_reg_991) + $signed(6'd35));

assign add_ln57_fu_566_p2 = (indvar_flatten310_load_reg_899 + 11'd1);

assign add_ln58_1_fu_791_p2 = (indvar_flatten276_load_reg_913 + 8'd1);

assign add_ln58_fu_522_p2 = (select_ln57_fu_493_p3 + 4'd1);

assign add_ln59_fu_477_p2 = (select_ln58_fu_465_p3 + 4'd1);

assign add_ln61_1_fu_625_p2 = (select_ln58_1_fu_615_p3 + c3_6_cast23_fu_622_p1);

assign add_ln64_10_fu_828_p2 = (add_ln64_reg_1019 + 11'd10);

assign add_ln64_1_fu_649_p2 = (add_ln64_reg_1019 + 11'd1);

assign add_ln64_2_fu_673_p2 = (add_ln64_reg_1019 + 11'd2);

assign add_ln64_3_fu_693_p2 = (add_ln64_reg_1019 + 11'd3);

assign add_ln64_4_fu_713_p2 = (add_ln64_reg_1019 + 11'd4);

assign add_ln64_5_fu_733_p2 = (add_ln64_reg_1019 + 11'd5);

assign add_ln64_6_fu_757_p2 = (add_ln64_reg_1019 + 11'd6);

assign add_ln64_7_fu_781_p2 = (add_ln64_reg_1019 + 11'd7);

assign add_ln64_8_fu_808_p2 = (add_ln64_reg_1019 + 11'd8);

assign add_ln64_9_fu_818_p2 = (add_ln64_reg_1019 + 11'd9);

assign and_ln57_fu_453_p2 = (xor_ln57_fu_441_p2 & icmp_ln59_fu_447_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage10 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp0_stage8 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_pp0_stage9 = ap_CS_fsm[32'd9];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage9_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage10_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage4_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage5_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage6_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage7_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage8_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage9_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage10_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage2_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage3_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage4_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage5_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage6_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp0_stage7_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage8_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp0_stage9_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp0_stage10_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp0_stage1_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp0_stage2_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp0_stage3_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp0_stage4_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp0_stage5_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state40_pp0_stage6_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state41_pp0_stage7_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state42_pp0_stage8_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state43_pp0_stage9_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state44_pp0_stage10_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state45_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state46_pp0_stage1_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state47_pp0_stage2_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state48_pp0_stage3_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state49_pp0_stage4_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state50_pp0_stage5_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state51_pp0_stage6_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state52_pp0_stage7_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state53_pp0_stage8_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state54_pp0_stage9_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state55_pp0_stage10_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state56_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state57_pp0_stage1_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state58_pp0_stage2_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state59_pp0_stage3_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state60_pp0_stage4_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state61_pp0_stage5_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state62_pp0_stage6_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state63_pp0_stage7_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state64_pp0_stage8_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state65_pp0_stage9_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state66_pp0_stage10_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state67_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage5_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage6_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage7_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage8_iter0 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_ext_blocking_n = (1'b1 & 1'b1);

assign ap_int_blocking_n = (1'b1 & 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage10;

assign ap_str_blocking_n = (1'b1 & 1'b1);

assign c3_6_cast23_fu_622_p1 = select_ln58_reg_946;

assign empty_59_fu_395_p0 = empty_59_fu_395_p00;

assign empty_59_fu_395_p00 = ap_sig_allocacmp_c2_2;

assign empty_59_fu_395_p1 = 11'd121;

assign empty_fu_560_p0 = empty_fu_560_p00;

assign empty_fu_560_p00 = c2_2_reg_893;

assign empty_fu_560_p1 = 7'd11;

assign grp_fu_170_p_ce = 1'b1;

assign grp_fu_170_p_din0 = grp_fu_325_p0;

assign grp_fu_170_p_din1 = grp_fu_325_p1;

assign grp_fu_170_p_opcode = 2'd0;

assign grp_fu_174_p_ce = 1'b1;

assign grp_fu_174_p_din0 = grp_fu_330_p0;

assign grp_fu_174_p_din1 = grp_fu_330_p1;

assign grp_fu_842_p0 = grp_fu_842_p00;

assign grp_fu_842_p00 = select_ln58_fu_465_p3;

assign grp_fu_842_p1 = 8'd11;

assign grp_fu_850_p0 = grp_fu_850_p00;

assign grp_fu_850_p00 = select_ln57_1_reg_926;

assign grp_fu_850_p1 = 11'd121;

assign grp_fu_850_p2 = grp_fu_850_p20;

assign grp_fu_850_p20 = add_ln61_1_fu_625_p2;

assign icmp_ln57_fu_401_p2 = ((ap_sig_allocacmp_indvar_flatten310_load == 11'd1331) ? 1'b1 : 1'b0);

assign icmp_ln58_fu_416_p2 = ((ap_sig_allocacmp_indvar_flatten276_load == 8'd121) ? 1'b1 : 1'b0);

assign icmp_ln59_fu_447_p2 = ((ap_sig_allocacmp_c3_load == 4'd11) ? 1'b1 : 1'b0);

assign or_ln58_fu_459_p2 = (icmp_ln58_fu_416_p2 | and_ln57_fu_453_p2);

assign p_mid1272_fu_609_p0 = p_mid1272_fu_609_p00;

assign p_mid1272_fu_609_p00 = add_ln58_reg_971;

assign p_mid1272_fu_609_p1 = 7'd11;

assign p_mid1274_fu_532_p0 = p_mid1274_fu_532_p00;

assign p_mid1274_fu_532_p00 = add_ln58_fu_522_p2;

assign p_mid1274_fu_532_p1 = 11'd121;

assign select_ln57_1_fu_428_p3 = ((icmp_ln58_fu_416_p2[0:0] == 1'b1) ? add_ln57_11_fu_422_p2 : ap_sig_allocacmp_c1_load);

assign select_ln57_2_fu_600_p3 = ((icmp_ln58_reg_918[0:0] == 1'b1) ? 7'd0 : empty_reg_981);

assign select_ln57_3_fu_516_p3 = ((icmp_ln58_reg_918[0:0] == 1'b1) ? 11'd0 : empty_59_reg_904);

assign select_ln57_fu_493_p3 = ((icmp_ln58_reg_918[0:0] == 1'b1) ? 4'd0 : c2_2_reg_893);

assign select_ln58_1_fu_615_p3 = ((and_ln57_reg_939[0:0] == 1'b1) ? p_mid1272_fu_609_p2 : select_ln57_2_fu_600_p3);

assign select_ln58_2_fu_538_p3 = ((and_ln57_reg_939[0:0] == 1'b1) ? p_mid1274_fu_532_p2 : select_ln57_3_fu_516_p3);

assign select_ln58_3_fu_545_p3 = ((and_ln57_reg_939[0:0] == 1'b1) ? add_ln58_fu_522_p2 : select_ln57_fu_493_p3);

assign select_ln58_4_fu_796_p3 = ((icmp_ln58_reg_918[0:0] == 1'b1) ? 8'd1 : add_ln58_1_fu_791_p2);

assign select_ln58_fu_465_p3 = ((or_ln58_fu_459_p2[0:0] == 1'b1) ? 4'd0 : ap_sig_allocacmp_c3_load);

assign sext_ln57_1_fu_772_p1 = $signed(add_ln57_10_fu_767_p2);

assign sext_ln57_fu_748_p1 = $signed(add_ln57_9_fu_743_p2);

assign v_buf_address0 = zext_ln61_fu_838_p1;

assign v_buf_d0 = reg_354;

assign xor_ln57_fu_441_p2 = (icmp_ln58_fu_416_p2 ^ 1'd1);

assign zext_ln57_10_fu_688_p1 = add_ln57_6_fu_683_p2;

assign zext_ln57_11_fu_708_p1 = add_ln57_7_fu_703_p2;

assign zext_ln57_12_fu_728_p1 = add_ln57_8_fu_723_p2;

assign zext_ln57_13_fu_752_p1 = $unsigned(sext_ln57_fu_748_p1);

assign zext_ln57_14_fu_776_p1 = $unsigned(sext_ln57_1_fu_772_p1);

assign zext_ln57_1_fu_436_p1 = select_ln57_1_fu_428_p3;

assign zext_ln57_2_fu_502_p1 = select_ln57_1_reg_926;

assign zext_ln57_3_fu_511_p1 = add_ln57_1_fu_505_p2;

assign zext_ln57_4_fu_571_p1 = select_ln57_1_reg_926;

assign zext_ln57_5_fu_580_p1 = add_ln57_2_fu_574_p2;

assign zext_ln57_6_fu_595_p1 = add_ln57_3_fu_590_p2;

assign zext_ln57_7_fu_644_p1 = add_ln57_4_fu_639_p2;

assign zext_ln57_8_fu_659_p1 = select_ln57_1_reg_926;

assign zext_ln57_9_fu_668_p1 = add_ln57_5_fu_662_p2;

assign zext_ln61_fu_838_p1 = add_ln61_reg_1048_pp0_iter5_reg;

assign zext_ln64_10_fu_823_p1 = add_ln64_9_fu_818_p2;

assign zext_ln64_11_fu_833_p1 = add_ln64_10_fu_828_p2;

assign zext_ln64_1_fu_635_p1 = grp_fu_842_p3;

assign zext_ln64_2_fu_654_p1 = add_ln64_1_fu_649_p2;

assign zext_ln64_3_fu_678_p1 = add_ln64_2_fu_673_p2;

assign zext_ln64_4_fu_698_p1 = add_ln64_3_fu_693_p2;

assign zext_ln64_5_fu_718_p1 = add_ln64_4_fu_713_p2;

assign zext_ln64_6_fu_738_p1 = add_ln64_5_fu_733_p2;

assign zext_ln64_7_fu_762_p1 = add_ln64_6_fu_757_p2;

assign zext_ln64_8_fu_786_p1 = add_ln64_7_fu_781_p2;

assign zext_ln64_9_fu_813_p1 = add_ln64_8_fu_808_p2;

always @ (posedge ap_clk) begin
    zext_ln57_4_reg_991[5:4] <= 2'b00;
    zext_ln57_8_reg_1068[6:4] <= 3'b000;
end

endmodule //krnl_helm_compute_1_Pipeline_VITIS_LOOP_57_24_VITIS_LOOP_58_25_VITIS_LOOP_59_26
